(window.webpackJsonp=window.webpackJsonp||[]).push([[161],{695:function(t,s,a){"use strict";a.r(s);var r=a(7),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"tcp-协议网关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-协议网关"}},[t._v("#")]),t._v(" TCP 协议网关")]),t._v(" "),a("h2",{attrs:{id:"协议介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#协议介绍"}},[t._v("#")]),t._v(" 协议介绍")]),t._v(" "),a("p",[t._v("EMQ X 提供 "),a("strong",[t._v("emqx-tcp")]),t._v(" 模块作为一个靠近端侧的一个接入模块，按照其功能逻辑和整个系统的关系，将整个消息交换的过程可以分成三个部分：终端侧，平台侧和其它侧：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("-- Terminal --"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">|")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("--------- Broker Side ---------"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">|")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("---  Others  ---"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("-    Sid e   -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">|")]),t._v("                                 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("--    Side    --"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">|")]),t._v("\n\n+---+                                                PUB  +-----------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" D "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  INCOMING  +----------+    PUB     +---------+   --"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">|")]),t._v(" subscriber"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" E "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("-----------"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">|")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("-----------"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">|")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("--/   +-----------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" V "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" emqx-tcp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  EMQ X  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" I "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("-----------"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("-----------"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("--   +-----------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" C "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  OUTGOING  +----------+    PUB     +---------+   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("--"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" publisher "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" E "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                                                PUB  +-----------+\n+---+\n")])])]),a("ol",[a("li",[t._v("终端侧，通过本模块定义的 TCP 私有协议进行接入，然后实现数据的上报，或者接收下行的消息。")]),t._v(" "),a("li",[t._v("平台侧，主体是 emqx-tcp 模块和  EMQ X 系统。emqx-tcp 负责报文的编解码，代理订阅下行主题。实现将上行消息转为 EMQ X 系统中的 MQTT 消息 PUBLISH 到整个系统中；将下行的 MQTT 消息转化为 TCP 私有协议的报文结构，下发到终端。")]),t._v(" "),a("li",[t._v("其它侧，可以对 2 中出现的上行的 PUBLISH 消息的主题进行订阅，以接收上行消息。或对发布消息到具体的下行的主题，以发送数据到终端侧。")])]),t._v(" "),a("h2",{attrs:{id:"创建模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建模块"}},[t._v("#")]),t._v(" 创建模块")]),t._v(" "),a("p",[t._v("打开 "),a("a",{attrs:{href:"http://127.0.0.1:18083/#/modules",target:"_blank",rel:"noopener noreferrer"}},[t._v("EMQ X Dashboard"),a("OutboundLink")],1),t._v("，点击左侧的 “模块” 选项卡，选择添加：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/backend/emqx/modules/assets/modules.png",alt:"modules.png"}})]),t._v(" "),a("p",[t._v("选择 TCP 私有协议接入网关:")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/backend/emqx/modules/assets/proto_tcp1.png",alt:"proto_tcp1.png"}})]),t._v(" "),a("p",[t._v("配置相关基础参数:")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/backend/emqx/modules/assets/proto_tcp2.png",alt:"proto_tcp2.png"}})]),t._v(" "),a("p",[t._v("添加监听端口:")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/backend/emqx/modules/assets/proto_tcp3.png",alt:"proto_tcp3.png"}})]),t._v(" "),a("p",[t._v("配置监听参数:")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/backend/emqx/modules/assets/proto_tcp4.png",alt:"proto_tcp4.png"}})]),t._v(" "),a("p",[t._v("点击确认到配置参数页面:")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/backend/emqx/modules/assets/proto_tcp5.png",alt:"proto_tcp5.png"}})]),t._v(" "),a("p",[t._v("点击添加后，模块添加完成:\n"),a("img",{attrs:{src:"http://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/backend/emqx/modules/assets/proto_tcp6.png",alt:"proto_tcp6.png"}})]),t._v(" "),a("h3",{attrs:{id:"配置参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置参数"}},[t._v("#")]),t._v(" 配置参数")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("配置项")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("空闲超时时间")]),t._v(" "),a("td",[t._v("闲置时间。超过该时间未收到 CONNECT 帧, 将直接关闭该 TCP 连接")])]),t._v(" "),a("tr",[a("td",[t._v("上行主题")]),t._v(" "),a("td",[t._v("上行主题。上行消息到 EMQ 系统中的消息主题%c: 接入客户端的 ClientId,%u: 接入客户端的 Username")])]),t._v(" "),a("tr",[a("td",[t._v("下行主题")]),t._v(" "),a("td",[t._v("下行主题。上行消息到 EMQ 系统中的消息主题%c: 接入客户端的 ClientId,%u: 接入客户端的 Username")])]),t._v(" "),a("tr",[a("td",[t._v("报文最大长度")]),t._v(" "),a("td",[t._v("最大处理的单个 TCP 私有协议报文大小")])]),t._v(" "),a("tr",[a("td",[t._v("强制 GC 策略")]),t._v(" "),a("td",[t._v("强制 GC, 当进程已处理 1000 消息或发送数据超过 1M")])]),t._v(" "),a("tr",[a("td",[t._v("强制关闭策略")]),t._v(" "),a("td",[t._v("强制关闭连接, 当进程堆积 8000 消息或堆栈内存超过 800M")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);