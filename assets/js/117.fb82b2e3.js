(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{710:function(v,_,e){"use strict";e.r(_);var t=e(8),r=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"配置说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置说明"}},[v._v("#")]),v._v(" 配置说明")]),v._v(" "),e("h2",{attrs:{id:"简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[v._v("#")]),v._v(" 简介")]),v._v(" "),e("p",[v._v("EMQ X 的配置文件通常以 "),e("code",[v._v(".conf")]),v._v(" 作为后缀名，你可以在 "),e("code",[v._v("etc")]),v._v(" 目录找到这些配置文件，主要配置文件包括：")]),v._v(" "),e("p",[v._v("{% emqxee %}")]),v._v(" "),e("table",[e("thead",[e("tr",[e("th",[v._v("配置文件")]),v._v(" "),e("th",[v._v("说明")])])]),v._v(" "),e("tbody",[e("tr",[e("td",[v._v("etc/emqx.conf")]),v._v(" "),e("td",[v._v("EMQ X 基础配置文件")])]),v._v(" "),e("tr",[e("td",[v._v("etc/cluster.conf")]),v._v(" "),e("td",[v._v("EMQ X 集群相关配置文件")])]),v._v(" "),e("tr",[e("td",[v._v("etc/rpc.conf")]),v._v(" "),e("td",[v._v("EMQ X 远程调用配置文件")])]),v._v(" "),e("tr",[e("td",[v._v("etc/logger.conf")]),v._v(" "),e("td",[v._v("EMQ X 日志配置文件")])]),v._v(" "),e("tr",[e("td",[v._v("etc/zones.conf")]),v._v(" "),e("td",[v._v("EMQ X Zone配置文件")])]),v._v(" "),e("tr",[e("td",[v._v("etc/listeners.conf")]),v._v(" "),e("td",[v._v("EMQ X 监听端口配置文件")])]),v._v(" "),e("tr",[e("td",[v._v("etc/sys_mon.conf")]),v._v(" "),e("td",[v._v("EMQ X 告警监控配置文件")])]),v._v(" "),e("tr",[e("td",[v._v("etc/acl.conf")]),v._v(" "),e("td",[v._v("EMQ X 默认 ACL 规则配置文件")])]),v._v(" "),e("tr",[e("td",[v._v("etc/plugins/*.conf")]),v._v(" "),e("td",[v._v("EMQ X 扩展插件配置文件")])])])]),v._v(" "),e("p",[v._v("{% endemqxee %}")]),v._v(" "),e("p",[v._v("{% emqxce %}")]),v._v(" "),e("table",[e("thead",[e("tr",[e("th",[v._v("配置文件")]),v._v(" "),e("th",[v._v("说明")])])]),v._v(" "),e("tbody",[e("tr",[e("td",[v._v("etc/emqx.conf")]),v._v(" "),e("td",[v._v("EMQ X 配置文件")])]),v._v(" "),e("tr",[e("td",[v._v("etc/acl.conf")]),v._v(" "),e("td",[v._v("EMQ X 默认 ACL 规则配置文件")])]),v._v(" "),e("tr",[e("td",[v._v("etc/plugins/*.conf")]),v._v(" "),e("td",[v._v("EMQ X 扩展插件配置文件")])])])]),v._v(" "),e("p",[v._v("{% endemqxce %}")]),v._v(" "),e("p",[v._v("需要注意的是，安装方式不同 "),e("code",[v._v("etc")]),v._v(" 目录所处的路径可能不同，具体请参见 "),e("RouterLink",{attrs:{to:"/zh/backend/emqx/getting-started/directory.html#"}},[v._v("目录结构")]),v._v("。")],1),v._v(" "),e("h2",{attrs:{id:"语法规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#语法规则"}},[v._v("#")]),v._v(" 语法规则")]),v._v(" "),e("ul",[e("li",[v._v("采用类似 sysctl 的 k = v 通用格式")]),v._v(" "),e("li",[v._v("单个配置项的所有信息都在同一行内，换行意味着创建一个新的配置项")]),v._v(" "),e("li",[v._v("键可以通过 "),e("code",[v._v(".")]),v._v(" 进行分层，支持按树形结构管理配置项")]),v._v(" "),e("li",[v._v("值的类型可以是 "),e("code",[v._v("integer")]),v._v(", "),e("code",[v._v("fload")]),v._v(", "),e("code",[v._v("percent")]),v._v(", "),e("code",[v._v("enum")]),v._v(", "),e("code",[v._v("ip")]),v._v(", "),e("code",[v._v("string")]),v._v(", "),e("code",[v._v("atom")]),v._v(", "),e("code",[v._v("flag")]),v._v(", "),e("code",[v._v("duration")]),v._v(" and "),e("code",[v._v("bytesize")])]),v._v(" "),e("li",[v._v("任何以＃开头的行均被视为注释")])]),v._v(" "),e("p",[e("strong",[v._v("示例：")])]),v._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[v._v("mqtt.max_packet_size "),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" 1MB\n")])])]),e("h2",{attrs:{id:"数据类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[v._v("#")]),v._v(" 数据类型")]),v._v(" "),e("p",[e("strong",[v._v("integer")])]),v._v(" "),e("p",[v._v("整型数据。")]),v._v(" "),e("p",[e("strong",[v._v("float")])]),v._v(" "),e("p",[v._v("浮点型数据。")]),v._v(" "),e("p",[e("strong",[v._v("percent")])]),v._v(" "),e("p",[v._v("以 "),e("code",[v._v("%")]),v._v(" 结尾的百分比数据，最终会被转换为 "),e("code",[v._v("float")]),v._v(" 类型。")]),v._v(" "),e("p",[e("strong",[v._v("enum")])]),v._v(" "),e("p",[v._v("通常我们会在类型为 "),e("code",[v._v("enum")]),v._v(" 的配置项附近列出它的所有可选值。当然，你也可以查找 "),e("RouterLink",{attrs:{to:"/zh/backend/emqx/configuration/configuration.html"}},[v._v("配置项")]),v._v("。")],1),v._v(" "),e("p",[e("strong",[v._v("ip")])]),v._v(" "),e("p",[v._v("当你看到某个配置项的数据类型为 "),e("code",[v._v("ip")]),v._v(" 时，意味着你可以使用 "),e("code",[v._v("<IP>:<Port>")]),v._v(" 的形式来设置该配置项，例如 "),e("code",[v._v("0.0.0.0:1883")]),v._v("。")]),v._v(" "),e("p",[e("strong",[v._v("string")])]),v._v(" "),e("p",[e("code",[v._v("*.conf")]),v._v(" 文件中除注释以外的所有内容都会先被解析成字符串再转换为其他类型，因此没有必要对 "),e("code",[v._v("string")]),v._v(" 类型的值额外使用双引号对值进行修饰，并且这种方式也不被支持。")]),v._v(" "),e("p",[e("em",[v._v("Yes!")])]),v._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[v._v("dir")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" tmp\n")])])]),e("p",[e("em",[v._v("No!!!")])]),v._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[v._v("dir")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[v._v('"tmp"')]),v._v("\t\t\n")])])]),e("p",[e("strong",[v._v("atom")])]),v._v(" "),e("p",[e("code",[v._v("atom")]),v._v(" 类型的值最终会转换成 Erlang 的 "),e("code",[v._v("atom")]),v._v("，但它在 "),e("code",[v._v("*.conf")]),v._v(" 文件中的使用方式与 "),e("code",[v._v("string")]),v._v(" 完全一致。")]),v._v(" "),e("p",[e("strong",[v._v("flag")])]),v._v(" "),e("p",[e("code",[v._v("flag")]),v._v(" 用于那些具有两个可能值的变量，"),e("code",[v._v("flag")]),v._v(" 默认可用值为 "),e("code",[v._v("on")]),v._v(" 和 "),e("code",[v._v("off")]),v._v("，它们将映射为 "),e("code",[v._v("true")]),v._v(" 和 "),e("code",[v._v("false")]),v._v(" 以供应用程序使用。如果我们为某个配置项建立了其他的映射关系，我们会在配置文件中注明，你也可以在 "),e("RouterLink",{attrs:{to:"/zh/backend/emqx/configuration/configuration.html"}},[v._v("配置项")]),v._v(" 中查找这些信息。")],1),v._v(" "),e("p",[e("strong",[v._v("duration")])]),v._v(" "),e("p",[e("code",[v._v("duration")]),v._v(" 用于指定那些固定的时间间隔，你可以使用以下时间单位：")]),v._v(" "),e("ul",[e("li",[v._v("f - fortnight")]),v._v(" "),e("li",[v._v("w - week")]),v._v(" "),e("li",[v._v("d - day")]),v._v(" "),e("li",[v._v("h - hour")]),v._v(" "),e("li",[v._v("m - minute")]),v._v(" "),e("li",[v._v("s - second")]),v._v(" "),e("li",[v._v("ms - millisecond")])]),v._v(" "),e("p",[v._v("你可以任意组合这些时间单位，例如 "),e("code",[v._v("1w13ms")]),v._v("，也可以使用浮点数，例如 "),e("code",[v._v("0.5d")]),v._v("，这些时间间隔最终将会被转换成我们指定的基准单位。这里有一点需要注意，如果你以毫秒为单位设置了某个配置项，而它的基准单位为秒，那么它将向上舍入至最接近的描述，例如 "),e("code",[v._v("1s50ms")]),v._v(" = "),e("code",[v._v("2s")]),v._v("。因此，我们会列出这一类配置项的基准单位。")]),v._v(" "),e("p",[e("strong",[v._v("bytesize")])]),v._v(" "),e("p",[e("code",[v._v("bytesize")]),v._v(" 支持以更易读的方式来设置报文大小、缓冲区大小等配置，单位可以是 "),e("code",[v._v("KB")]),v._v("，"),e("code",[v._v("MB")]),v._v(" 和 "),e("code",[v._v("GB")]),v._v("，你也可以使用小写，例如 "),e("code",[v._v("kb")]),v._v("，但不支持大小写混合，例如 "),e("code",[v._v("Kb")]),v._v("，它们最终都将被转换为字节数。如果你未指定任何单位，那么它被直接作为字节数使用。")]),v._v(" "),e("h2",{attrs:{id:"默认配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#默认配置"}},[v._v("#")]),v._v(" 默认配置")]),v._v(" "),e("p",[v._v("在 EMQ X 的配置文件中，你会看到很多被注释掉的配置项，这意味着这些配置项会使用他们的默认值，通常我们会列出这些配置的默认值。")]),v._v(" "),e("h2",{attrs:{id:"zone-listener"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zone-listener"}},[v._v("#")]),v._v(" Zone & Listener")]),v._v(" "),e("p",[v._v("EMQ X 提供了非常多的配置项，并支持全局配置和局部配置。例如，EMQ X 提供了匿名访问的功能，即允许客户端不需要用户名与密码就能连接 Broker，通常在用户的生产环境中，此功能被默认关闭，但用户可能又希望在他的内网环境中启用此功能。从 3.0 版本开始，EMQ X 就通过 Zone 与 Listener 为用户提供了这种可能。")]),v._v(" "),e("h3",{attrs:{id:"listener"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#listener"}},[v._v("#")]),v._v(" Listener")]),v._v(" "),e("p",[v._v("Listener 主要用于配置不同协议的监听端口和相关参数，EMQ X 支持配置多个 Listener 以同时监听多个协议或端口，以下是支持的 Listener：")]),v._v(" "),e("table",[e("thead",[e("tr",[e("th",[v._v("监听器")]),v._v(" "),e("th",[v._v("说明")])])]),v._v(" "),e("tbody",[e("tr",[e("td",[v._v("TCP Listener")]),v._v(" "),e("td",[v._v("A listener for MQTT which uses TCP")])]),v._v(" "),e("tr",[e("td",[v._v("SSL Listener")]),v._v(" "),e("td",[v._v("A secure listener for MQTT which uses TLS")])]),v._v(" "),e("tr",[e("td",[v._v("Websocket Listener")]),v._v(" "),e("td",[v._v("A listener for MQTT over WebSockets")])]),v._v(" "),e("tr",[e("td",[v._v("Secure Websocket Listener")]),v._v(" "),e("td",[v._v("A secure listener for MQTT over secure WebSockets (TLS)")])])])]),v._v(" "),e("p",[v._v("EMQ X 默认提供 5 个 Listener，它们将占用以下端口：")]),v._v(" "),e("table",[e("thead",[e("tr",[e("th",[v._v("端口")]),v._v(" "),e("th",[v._v("说明")])])]),v._v(" "),e("tbody",[e("tr",[e("td",[v._v("1883")]),v._v(" "),e("td",[v._v("MQTT/TCP 协议端口")])]),v._v(" "),e("tr",[e("td",[v._v("11883")]),v._v(" "),e("td",[v._v("MQTT/TCP 协议内部端口，仅用于本机客户端连接")])]),v._v(" "),e("tr",[e("td",[v._v("8883")]),v._v(" "),e("td",[v._v("MQTT/SSL 协议端口")])]),v._v(" "),e("tr",[e("td",[v._v("8083")]),v._v(" "),e("td",[v._v("MQTT/WS 协议端口")])]),v._v(" "),e("tr",[e("td",[v._v("8084")]),v._v(" "),e("td",[v._v("MQTT/WSS 协议端口")])])])]),v._v(" "),e("p",[v._v("Listener 配置项的命名规则为 "),e("code",[v._v("listener.<Protocol>.<Listener Name>.xxx")]),v._v("，"),e("code",[v._v("<Protocol>")]),v._v(" 即 Listener 使用的协议，目前支持 "),e("code",[v._v("tcp")]),v._v(", "),e("code",[v._v("ssl")]),v._v(", "),e("code",[v._v("ws")]),v._v(", "),e("code",[v._v("wss")]),v._v("。"),e("code",[v._v("<Listener Name>")]),v._v(" 可以随意命名，但建议是全小写的英文单词，"),e("code",[v._v("xxx")]),v._v(" 则是具体的配置项。不同协议的 Listener 的 "),e("code",[v._v("<Listener Name>")]),v._v(" 可以重复，"),e("code",[v._v("listener.tcp.external")]),v._v(" 与 "),e("code",[v._v("listener.ssl.external")]),v._v(" 是两个不同的 Listener。")]),v._v(" "),e("p",[v._v("由于默认配置的存在，我们能够非常快速地展示如何添加新的 Listener，以 TCP Listener 为例，我们只需要在 "),e("code",[v._v("emqx.conf")]),v._v(" 中添加以下一条配置即可：")]),v._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[v._v("listener.tcp.example "),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[v._v("12345")]),v._v("\n")])])]),e("p",[v._v("当然这种情况我们更建议您复制一份默认 Listener 的配置进行修改。")]),v._v(" "),e("h3",{attrs:{id:"zone"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zone"}},[v._v("#")]),v._v(" Zone")]),v._v(" "),e("p",[v._v("一个 Zone 定义了一组配置项 (比如最大连接数等)，Listener 可以通过配置项 "),e("code",[v._v("listener.<Protocol>.<Listener Name>.zone")]),v._v(" 指定使用某个 Zone，以使用该 Zone 下的所有配置。多个 Listener 可以共享同一个 Zone。Zone 的命名规则为 "),e("code",[v._v("zone.<Zone Name>.xxx")]),v._v("，"),e("code",[v._v("Zone Name")]),v._v(" 可以随意命名，但同样建议是全小写的英文单词，"),e("code",[v._v("xxx")]),v._v(" 是具体的配置项，你可以在 "),e("RouterLink",{attrs:{to:"/zh/backend/emqx/configuration/configuration.html"}},[v._v("配置项")]),v._v(" 中查看 Zone 支持的所有配置项。")],1),v._v(" "),e("p",[v._v("此时，我们的每个配置项都存在三个可用值，分别是全局的值，Zone 里设置的值以及默认值，它们的优先级顺序为：Zone > Global > Default。")]),v._v(" "),e("h2",{attrs:{id:"配置更新"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置更新"}},[v._v("#")]),v._v(" 配置更新")]),v._v(" "),e("p",[v._v("配置项会在 EMQ X Broker 与扩展插件被启动时读取并载入，EMQ X Broker 目前尚不支持运行时更新配置，但由于扩展插件支持动态加载和卸载，因此可以在修改插件配置后重新加载插件来应用最新的配置项。")])])}),[],!1,null,null,null);_.default=r.exports}}]);