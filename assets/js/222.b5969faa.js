(window.webpackJsonp=window.webpackJsonp||[]).push([[222],{774:function(t,a,e){"use strict";e.r(a);var s=e(7),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"使用kepserverex进行数据模拟"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用kepserverex进行数据模拟"}},[t._v("#")]),t._v(" 使用KepServerEx进行数据模拟")]),t._v(" "),e("p",[t._v("KepServerEx是一款在工业控制中比较常见的数据采集服务软件之一，提供了多种类型的驱动，具有比较广泛的适用性。很多厂商和个人都会选择用它来做OPCServer。在项目的实施或测试过程中，我们有时会遇到身边没有传感器、PLC之类设备的情况，就无法通过实时数据来测试工作成果的有效性。幸运的是KepServerEx提供了数据模拟功能，可以提供多种类型、格式的模拟数据。下面就是具体的配置过程。")]),t._v(" "),e("h2",{attrs:{id:"安装kepserverex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装kepserverex"}},[t._v("#")]),t._v(" 安装KepServerEx")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/blog/study/opc/kepserver1.png",alt:"kepserver1.png"}})]),t._v(" "),e("p",[t._v("安装完成后进入配置界面")]),t._v(" "),e("h2",{attrs:{id:"配置kepserverex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置kepserverex"}},[t._v("#")]),t._v(" 配置KepServerEx")]),t._v(" "),e("h3",{attrs:{id:"配置通道"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置通道"}},[t._v("#")]),t._v(" 配置通道")]),t._v(" "),e("p",[t._v("进入主界面后，在项目栏中点击“单击添加通道”")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/blog/study/opc/kepserver2.png",alt:"kepserver2.png"}}),t._v("、")]),t._v(" "),e("p",[t._v("选择“Simulator”，即模拟器驱动，然后点击下一步")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/blog/study/opc/kepsever3.png",alt:"kepsever3.png"}})]),t._v(" "),e("p",[t._v("设置通道名")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/blog/study/opc/kepserver4.png",alt:"kepserver4.png"}})]),t._v(" "),e("p",[t._v("选择优化方法与设置工作循环")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/blog/study/opc/kepserver5.png",alt:"kepserver5.png"}})]),t._v(" "),e("p",[t._v("设置无效浮点数的替换方法")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/blog/study/opc/kepserver6.png",alt:"kepserver6.png"}})]),t._v(" "),e("p",[t._v("以及存储设置")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/blog/study/opc/kepserver7.png",alt:"kepserver7.png"}})]),t._v(" "),e("p",[t._v("完成上述选项后，可看到最后的完成界面，点击完成，完成通道配置。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/blog/study/opc/kepsever8.png",alt:"kepsever8.png"}})]),t._v(" "),e("h3",{attrs:{id:"配置设备"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置设备"}},[t._v("#")]),t._v(" 配置设备")]),t._v(" "),e("p",[t._v("在刚刚添加的通道下，单击添加设备")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/blog/study/opc/device1.png",alt:"device1.png"}})]),t._v(" "),e("p",[t._v("配置设备属性，包括命名，选择设备型号等属性")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/blog/study/opc/device2.png",alt:"device2.png"}})]),t._v(" "),e("h3",{attrs:{id:"配置tag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置tag"}},[t._v("#")]),t._v(" 配置tag")]),t._v(" "),e("p",[t._v("在新添加的设备下，点击添加标签")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/blog/study/opc/tag1.png",alt:"tag1.png"}})]),t._v(" "),e("p",[t._v("配置tag属性，包括命名、选择数据类型、客户端访问模式、设置地址等；")]),t._v(" "),e("p",[t._v("示例如下：\n"),e("img",{attrs:{src:"https://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/blog/study/opc/tag2.png",alt:"tag2.png"}})]),t._v(" "),e("p",[t._v("ag即标签，可理解为OPC中的Item。现在才来到整篇文章的重点。")]),t._v(" "),e("p",[t._v("添加标签的界面包含两部分，一部分是对标签的定义（Identification），包括名称（Name）、地址（Address）、描述（Description），另一部分是数据的属性（Data Properties），包括数据类型（DataType ）、读写类型（Client）、扫描频率（Scan Rate）。\n对我们而言，用处最大的就是Address，我们可以编写不同的函数放在Address中用来模拟不同类型的数据。官方文档提供了多种模拟函数供我们使用（可在帮助文档中找到）。")]),t._v(" "),e("hr"),t._v(" "),e("h4",{attrs:{id:"线形变化型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#线形变化型"}},[t._v("#")]),t._v(" 线形变化型")]),t._v(" "),e("h5",{attrs:{id:"ramp-rate-low-limit-high-limit-increment"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ramp-rate-low-limit-high-limit-increment"}},[t._v("#")]),t._v(" RAMP(Rate, Low Limit, High Limit, Increment)")]),t._v(" "),e("p",[t._v("Rate：变化率，单位毫秒"),e("br"),t._v("\nLow Limit：下限值"),e("br"),t._v("\nHigh Limit：上限值"),e("br"),t._v("\nIncrement：变化量")]),t._v(" "),e("p",[t._v("举例：")]),t._v(" "),e("h6",{attrs:{id:"ramp-120-35-100-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ramp-120-35-100-4"}},[t._v("#")]),t._v(" RAMP(120, 35, 100, 4)")]),t._v(" "),e("p",[t._v("从35 增长到100，每120毫秒增长4。")]),t._v(" "),e("h6",{attrs:{id:"ramp-300-150-75-200-50-0-25"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ramp-300-150-75-200-50-0-25"}},[t._v("#")]),t._v(" RAMP(300, 150.75, 200.50, -0.25)")]),t._v(" "),e("p",[t._v("从200.50降低到150.75，每300毫秒减少0.25。")]),t._v(" "),e("hr"),t._v(" "),e("h4",{attrs:{id:"随机变化型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#随机变化型"}},[t._v("#")]),t._v(" 随机变化型")]),t._v(" "),e("h5",{attrs:{id:"random-rate-low-limit-high-limit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#random-rate-low-limit-high-limit"}},[t._v("#")]),t._v(" RANDOM(Rate, Low Limit, High Limit)")]),t._v(" "),e("p",[t._v("Rate：变化率，单位毫秒"),e("br"),t._v("\nLow Limit：下限值"),e("br"),t._v("\nHigh Limit：上限值")]),t._v(" "),e("p",[t._v("举例：")]),t._v(" "),e("h6",{attrs:{id:"random-30-20-75"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#random-30-20-75"}},[t._v("#")]),t._v(" RANDOM(30, -20, 75)")]),t._v(" "),e("p",[t._v("在-20和75之间随机变化，每30毫秒变化一次。")]),t._v(" "),e("hr"),t._v(" "),e("h4",{attrs:{id:"三角函数型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三角函数型"}},[t._v("#")]),t._v(" 三角函数型")]),t._v(" "),e("h5",{attrs:{id:"sine-rate-low-limit-high-limit-frequency-phase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sine-rate-low-limit-high-limit-frequency-phase"}},[t._v("#")]),t._v(" SINE(Rate, Low Limit, High Limit, Frequency, Phase)")]),t._v(" "),e("p",[t._v("Rate：变化率/变化周期，单位毫秒"),e("br"),t._v("\nLow Limit：下限值"),e("br"),t._v("\nHigh Limit：上限值"),e("br"),t._v("\nFrequency：三角函数频率"),e("br"),t._v("\nPhase：三角函数偏移量")]),t._v(" "),e("blockquote",[e("p",[t._v("注意：频率（Frequency）的最大有效值是5Hz，有效范围是从0.001到5赫兹。偏移量（Phase）取值范围在0.0至360.0之间。为了得到一个更好的正弦输出，变化率（Rate）应该至少比期望频率快一倍。比如频率（Frequency）为5赫兹的正弦曲线，其周期是200毫秒，那么变化周期（Rate）的值最大只能设为100毫秒。在这类函数中，变化周期的取值范围是10-1000毫秒。")])]),t._v(" "),e("p",[t._v("举例：")]),t._v(" "),e("h6",{attrs:{id:"sine-10-40-40-2-0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sine-10-40-40-2-0"}},[t._v("#")]),t._v(" SINE(10, -40, 40, 2, 0)")]),t._v(" "),e("p",[t._v("以2赫兹的频率在-40和40 之间进行正弦变化，偏移量为0")]),t._v(" "),e("h4",{attrs:{id:"用户自定义型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用户自定义型"}},[t._v("#")]),t._v(" 用户自定义型")]),t._v(" "),e("h5",{attrs:{id:"user-rate-user-value1-user-value2-user-value3-user-valuen"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#user-rate-user-value1-user-value2-user-value3-user-valuen"}},[t._v("#")]),t._v(" USER(Rate, User Value1, User Value2, User Value3,…User ValueN)")]),t._v(" "),e("p",[t._v("Rate：变化率，单位毫秒"),e("br"),t._v("\nUser Value1….ValueN：用户自定义的值，可以有多个")]),t._v(" "),e("p",[t._v("举例：")]),t._v(" "),e("h6",{attrs:{id:"user-250-hello-world-this-is-a-test"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#user-250-hello-world-this-is-a-test"}},[t._v("#")]),t._v(" USER(250, Hello, World, This, Is, A, Test)")]),t._v(" "),e("p",[t._v("以250毫秒的频率循环显示Hello、World、This、Is、A、Test中的一个单词。")]),t._v(" "),e("h6",{attrs:{id:"user-50-1-1-0-1-0-1-0-0-1-1-1-0-0-0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#user-50-1-1-0-1-0-1-0-0-1-1-1-0-0-0"}},[t._v("#")]),t._v(" USER(50, 1,1,0,1,0,1,0,0,1,1,1,0,0,0)")]),t._v(" "),e("p",[t._v("以50毫秒的频率循环显示后面的1、0。")]),t._v(" "),e("blockquote",[e("p",[t._v("需要注意的是上面几种函数创建的Tag都是只读（ReadOnly）类型的，是不能写入的。")])]),t._v(" "),e("hr"),t._v(" "),e("h4",{attrs:{id:"创建自己需要的标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建自己需要的标签"}},[t._v("#")]),t._v(" 创建自己需要的标签")]),t._v(" "),e("p",[t._v("有了上面的函数我们可以根据自己的需要创建不同类型的标签。\n例如：")]),t._v(" "),e("p",[t._v("RANDOM (30, 49.900000, 50.100000)")]),t._v(" "),e("p",[t._v("USER (10,10)")]),t._v(" "),e("p",[t._v("USER (250,Hello,World,This,Is,A,Test)")]),t._v(" "),e("p",[t._v("将标签添加完之后保存，用OPCClient连接就可以看到数据在愉快的跳动了。（工具栏中点击“启动OPC Quick Client”）")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/blog/study/opc/tag3.png",alt:"tag3.png"}})])])}),[],!1,null,null,null);a.default=r.exports}}]);