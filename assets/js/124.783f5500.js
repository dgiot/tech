(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{521:function(a,s,e){"use strict";e.r(s);var t=e(8),r=Object(t.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"日志与追踪"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日志与追踪"}},[a._v("#")]),a._v(" 日志与追踪")]),a._v(" "),e("h2",{attrs:{id:"控制日志输出"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#控制日志输出"}},[a._v("#")]),a._v(" 控制日志输出")]),a._v(" "),e("p",[a._v("EMQ X 支持将日志输出到控制台或者日志文件，或者同时使用两者。可在 "),e("code",[a._v("emqx.conf")]),a._v(" 中配置：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("log.to = both\n")])])]),e("p",[e("code",[a._v("log.to")]),a._v(" 默认值是 both，可选的值为：")]),a._v(" "),e("ul",[e("li",[e("p",[e("strong",[a._v("off:")]),a._v(" 完全关闭日志功能")])]),a._v(" "),e("li",[e("p",[e("strong",[a._v("file:")]),a._v(" 仅将日志输出到文件")])]),a._v(" "),e("li",[e("p",[e("strong",[a._v("console:")]),a._v(" 仅将日志输出到标准输出(emqx 控制台)")])]),a._v(" "),e("li",[e("p",[e("strong",[a._v("both:")]),a._v(" 同时将日志输出到文件和标准输出(emqx 控制台)")])])]),a._v(" "),e("h2",{attrs:{id:"日志级别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日志级别"}},[a._v("#")]),a._v(" 日志级别")]),a._v(" "),e("p",[a._v("EMQ X 的日志分 8 个等级 ("),e("a",{attrs:{href:"https://www.ietf.org/rfc/rfc5424.txt",target:"_blank",rel:"noopener noreferrer"}},[a._v("RFC 5424"),e("OutboundLink")],1),a._v(")，由低到高分别为：")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("debug "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" info "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" notice "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" warning "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" error "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" critical "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" alert "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" emergency\n")])])]),e("p",[a._v("EMQ X 的默认日志级别为 warning，可在 "),e("code",[a._v("emqx.conf")]),a._v(" 中修改：")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("log.level "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" warning\n")])])]),e("p",[a._v("此配置将所有 log handler 的配置设置为 warning。")]),a._v(" "),e("h2",{attrs:{id:"日志文件和日志滚动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日志文件和日志滚动"}},[a._v("#")]),a._v(" 日志文件和日志滚动")]),a._v(" "),e("p",[a._v("EMQ X 的默认日志文件目录在 "),e("code",[a._v("./log")]),a._v(" (zip包解压安装) 或者 "),e("code",[a._v("/var/log/emqx")]),a._v(" (二进制包安装)。可在 "),e("code",[a._v("emqx.conf")]),a._v(" 中配置：")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("log.dir "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" log\n")])])]),e("p",[a._v("在文件日志启用的情况下 (log.to = file 或 both)，日志目录下会有如下几种文件:")]),a._v(" "),e("ul",[e("li",[e("strong",[a._v("emqx.log.N:")]),a._v(" 以 emqx.log 为前缀的文件为日志文件，包含了 EMQ X 的所有日志消息。比如 "),e("code",[a._v("emqx.log.1")]),a._v(", "),e("code",[a._v("emqx.log.2")]),a._v(" ...")]),a._v(" "),e("li",[e("strong",[a._v("emqx.log.siz 和 emqx.log.idx:")]),a._v(" 用于记录日志滚动信息的系统文件。")]),a._v(" "),e("li",[e("strong",[a._v("run_erl.log:")]),a._v(" 以 "),e("code",[a._v("emqx start")]),a._v(" 方式后台启动 EMQ X 时，用于记录启动信息的系统文件。")]),a._v(" "),e("li",[e("strong",[a._v("erlang.log.N:")]),a._v(" 以 erlang.log 为前缀的文件为日志文件，是以 "),e("code",[a._v("emqx start")]),a._v(" 方式后台启动 EMQ X 时，控制台日志的副本文件。比如 "),e("code",[a._v("erlang.log.1")]),a._v(", "),e("code",[a._v("erlang.log.2")]),a._v(" ...")])]),a._v(" "),e("p",[a._v("可在 "),e("code",[a._v("emqx.conf")]),a._v(" 中修改日志文件的前缀，默认为 "),e("code",[a._v("emqx.log")]),a._v("：")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("log.file "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" emqx.log\n")])])]),e("p",[a._v("EMQ X 默认在单日志文件超过 10MB 的情况下，滚动日志文件，最多可有 5 个日志文件：第 1 个日志文件为 emqx.log.1，第 2 个为 emqx.log.2，并以此类推。当最后一个日志文件也写满 10MB 的时候，将从序号最小的日志的文件开始覆盖。文件大小限制和最大日志文件个数可在 "),e("code",[a._v("emqx.conf")]),a._v(" 中修改：")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("log.rotation.size "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 10MB\nlog.rotation.count "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v("\n")])])]),e("h2",{attrs:{id:"针对日志级别输出日志文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#针对日志级别输出日志文件"}},[a._v("#")]),a._v(" 针对日志级别输出日志文件")]),a._v(" "),e("p",[a._v("如果想把大于或等于某个级别的日志写入到单独的文件，可以在 "),e("code",[a._v("emqx.conf")]),a._v(" 中配置 "),e("code",[a._v("log.<level>.file")]),a._v("：")]),a._v(" "),e("p",[a._v("将 info 及 info 以上的日志单独输出到 "),e("code",[a._v("info.log.N")]),a._v(" 文件中：")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("log.info.file "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" info.log\n")])])]),e("p",[a._v("将 error 及 error 以上的日志单独输出到 "),e("code",[a._v("error.log.N")]),a._v(" 文件中")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("log.error.file "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" error.log\n")])])]),e("h2",{attrs:{id:"日志格式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日志格式"}},[a._v("#")]),a._v(" 日志格式")]),a._v(" "),e("p",[a._v("可在 "),e("code",[a._v("emqx.conf")]),a._v(" 中修改单个日志消息的最大字符长度，如长度超过限制则截断日志消息并用 "),e("code",[a._v("...")]),a._v(" 填充。默认不限制长度：")]),a._v(" "),e("p",[a._v("将单个日志消息的最大字符长度设置为 8192:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("log.chars_limit "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("8192")]),a._v("\n")])])]),e("p",[a._v("日志消息的格式为(各个字段之间用空格分隔)：")]),a._v(" "),e("p",[e("strong",[a._v("date time level client_info module_info msg")])]),a._v(" "),e("ul",[e("li",[e("strong",[a._v("date:")]),a._v(" 当地时间的日期。格式为：YYYY-MM-DD")]),a._v(" "),e("li",[e("strong",[a._v("time:")]),a._v(" 当地时间，精确到毫秒。格式为：hh:mm:ss.ms")]),a._v(" "),e("li",[e("strong",[a._v("level:")]),a._v(" 日志级别，使用中括号包裹。格式为：[Level]")]),a._v(" "),e("li",[e("strong",[a._v("client_info:")]),a._v(" 可选字段，仅当此日志消息与某个客户端相关时存在。其格式为：ClientId@Peername 或 ClientId 或 Peername")]),a._v(" "),e("li",[e("strong",[a._v("module_info:")]),a._v(" 可选字段，仅当此日志消息与某个模块相关时存在。其格式为：[Module Info]")]),a._v(" "),e("li",[e("strong",[a._v("msg:")]),a._v(" 日志消息内容。格式任意，可包含空格。")])]),a._v(" "),e("h3",{attrs:{id:"日志消息举例-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日志消息举例-1"}},[a._v("#")]),a._v(" 日志消息举例 1：")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2020")]),a._v("-02-18 "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("16")]),a._v(":10:03.872 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("debug"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"mqttjs_9e49354bb3"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v("@127.0.0.1:57105 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("MQTT/WS"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" SEND CONNACK"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Q0, R0, D0, "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("AckFlags")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(", "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ReasonCode")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),e("p",[a._v("此日志消息里各个字段分别为:")]),a._v(" "),e("ul",[e("li",[e("strong",[a._v("date:")]),a._v(" "),e("code",[a._v("2020-02-18")])]),a._v(" "),e("li",[e("strong",[a._v("time:")]),a._v(" "),e("code",[a._v("16:10:03.872")])]),a._v(" "),e("li",[e("strong",[a._v("level:")]),a._v(" "),e("code",[a._v("[debug]")])]),a._v(" "),e("li",[e("strong",[a._v("client_info:")]),a._v(" "),e("code",[a._v('<<"mqttjs_9e49354bb3">>@127.0.0.1:57105')])]),a._v(" "),e("li",[e("strong",[a._v("module_info:")]),a._v(" "),e("code",[a._v("[MQTT/WS]")])]),a._v(" "),e("li",[e("strong",[a._v("msg:")]),a._v(" "),e("code",[a._v("SEND CONNACK(Q0, R0, D0, AckFlags=0, ReasonCode=0)")])])]),a._v(" "),e("h3",{attrs:{id:"日志消息举例-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日志消息举例-2"}},[a._v("#")]),a._v(" 日志消息举例 2：")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2020")]),a._v("-02-18 "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("16")]),a._v(":10:08.474 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("warning"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Alarm Handler"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" New Alarm: system_memory_high_watermark, Alarm Info: "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),e("p",[a._v("此日志消息里各个字段分别为:")]),a._v(" "),e("ul",[e("li",[e("strong",[a._v("date:")]),a._v(" "),e("code",[a._v("2020-02-18")])]),a._v(" "),e("li",[e("strong",[a._v("time:")]),a._v(" "),e("code",[a._v("16:10:08.474")])]),a._v(" "),e("li",[e("strong",[a._v("level:")]),a._v(" "),e("code",[a._v("[warning]")])]),a._v(" "),e("li",[e("strong",[a._v("module_info:")]),a._v(" "),e("code",[a._v("[Alarm Handler]")])]),a._v(" "),e("li",[e("strong",[a._v("msg:")]),a._v(" "),e("code",[a._v("New Alarm: system_memory_high_watermark, Alarm Info: []")])])]),a._v(" "),e("p",[a._v("注意此日志消息中，client_info 字段不存在。")]),a._v(" "),e("h2",{attrs:{id:"日志级别和-log-handlers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日志级别和-log-handlers"}},[a._v("#")]),a._v(" 日志级别和 log handlers")]),a._v(" "),e("p",[a._v("EMQ X 使用了分层的日志系统，在日志级别上，包括全局日志级别 (primary log level)、以及各 log hanlder 的日志级别。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("     "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Primary Level"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("        -- global log level and filters\n           / "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Handler "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Handler "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("    -- log levels and filters at each handler\n")])])]),e("p",[a._v("log handler 是负责日志处理和输出的工作进程，它由 log handler id 唯一标识，并负有如下任务：")]),a._v(" "),e("ul",[e("li",[a._v("接收什么级别的日志")]),a._v(" "),e("li",[a._v("如何过滤日志消息")]),a._v(" "),e("li",[a._v("将日志输出到什么地方")])]),a._v(" "),e("p",[a._v("我们来看一下 emqx 默认安装的 log handlers:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("$ emqx_ctl log handlers list\n\nLogHandler"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("id"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("ssl_handler, "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("level")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("debug, "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("destination")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("console, "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("status")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("started"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nLogHandler"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("id"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("file, "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("level")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("warning, "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("destination")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("log/emqx.log, "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("status")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("started"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nLogHandler"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("id"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("default, "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("level")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("warning, "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("destination")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("console, "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("status")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("started"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),e("ul",[e("li",[a._v("file: 负责输出到日志文件的 log handler。它没有设置特殊过滤条件，即所有日志消息只要级别满足要求就输出。输出目的地为日志文件。")]),a._v(" "),e("li",[a._v("default: 负责输出到控制台的 log handler。它没有设置特殊过滤条件，即所有日志消息只要级别满足要求就输出。输出目的地为控制台。")]),a._v(" "),e("li",[a._v("ssl_handler: ssl 的 log handler。它的过滤条件设置为当日志是来自 ssl 模块时输出。输出目的地为控制台。")])]),a._v(" "),e("p",[a._v("日志消息输出前，首先检查消息是否高于 primary log level，日志消息通过检查后流入各 log handler，再检查各 handler 的日志级别，如果日志消息也高于 handler level，则由对应的 handler 执行相应的过滤条件，过滤条件通过则输出。")]),a._v(" "),e("p",[a._v("设想一个场景，假设 primary log level 设置为 info，log handler "),e("code",[a._v("default")]),a._v(" (负责输出到控制台) 的级别设置为 debug，log handler "),e("code",[a._v("file")]),a._v(" (负责输出到文件) 的级别设置为 warning：")]),a._v(" "),e("ul",[e("li",[a._v("虽然 console 日志是 debug 级别，但此时 console 日志只能输出 info 以及 info 以上的消息，因为经过 primary level 过滤之后，流到 default 和 file 的日志只剩下 info 及以上的级别；")]),a._v(" "),e("li",[a._v("emqx.log.N 文件里面，包含了 warning 以及 warning 以上的日志消息。")])]),a._v(" "),e("p",[a._v("在 "),e("a",{attrs:{href:"#log-levels"}},[a._v("日志级别")]),a._v(" 章节中提到的 "),e("code",[a._v("log.level")]),a._v(" 是修改了全局的日志级别。这包括 primary log level 和各个 handlers 的日志级别，都设置为了同一个值。")]),a._v(" "),e("p",[a._v("Primary Log Level 相当于一个自来水管道系统的总开关，一旦关闭则各个分支管道都不再有水流通过。这个机制保证了日志系统的高性能运作。")]),a._v(" "),e("h2",{attrs:{id:"运行时修改日志级别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#运行时修改日志级别"}},[a._v("#")]),a._v(" 运行时修改日志级别")]),a._v(" "),e("p",[a._v("你可以使用 EMQ X 的命令行工具 "),e("code",[a._v("emqx_ctl")]),a._v(" 在运行时修改 emqx 的日志级别：")]),a._v(" "),e("h3",{attrs:{id:"修改全局日志级别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改全局日志级别"}},[a._v("#")]),a._v(" 修改全局日志级别：")]),a._v(" "),e("p",[a._v("例如，将 primary log level 以及所有 log handlers 的级别设置为 debug：")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("$ emqx_ctl log set-level debug\n")])])]),e("h3",{attrs:{id:"修改主日志级别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改主日志级别"}},[a._v("#")]),a._v(" 修改主日志级别：")]),a._v(" "),e("p",[a._v("例如，将 primary log level 设置为 debug:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("$ emqx_ctl log primary-level debug\n")])])]),e("h3",{attrs:{id:"修改某个-log-handler-的日志级别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改某个-log-handler-的日志级别"}},[a._v("#")]),a._v(" 修改某个 log handler 的日志级别：")]),a._v(" "),e("p",[a._v("例如，将 log handler "),e("code",[a._v("file")]),a._v(" 设置为 debug:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("$ emqx_ctl log handlers set-level "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),a._v(" debug\n")])])]),e("h3",{attrs:{id:"停止某个-log-handler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#停止某个-log-handler"}},[a._v("#")]),a._v(" 停止某个 log handler：")]),a._v(" "),e("p",[a._v("例如，为了让日志不再输出到 console，可以停止 log handler "),e("code",[a._v("default")]),a._v(":")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("$ emqx_ctl log handlers stop default\n")])])]),e("h3",{attrs:{id:"启动某个已经停止的-log-handler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动某个已经停止的-log-handler"}},[a._v("#")]),a._v(" 启动某个已经停止的 log handler：")]),a._v(" "),e("p",[a._v("例如，启动上面已停止的 log handler "),e("code",[a._v("default")]),a._v(":")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("$ emqx_ctl log handlers start default\n")])])]),e("h2",{attrs:{id:"日志追踪"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日志追踪"}},[a._v("#")]),a._v(" 日志追踪")]),a._v(" "),e("p",[a._v("EMQ X 支持针对 ClientID 或 Topic 过滤日志并输出到文件。在使用日志追踪功能之前，必须将 primary log level 设置为 debug：")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("$ emqx_ctl log primary-level debug\n")])])]),e("p",[a._v("开启 ClientID 日志追踪，将所有 ClientID 为 'my_client' 的日志都输出到 log/my_client.log:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("$ emqx_ctl log primary-level debug\ndebug\n\n$ emqx_ctl trace start client my_client log/my_client.log\ntrace clientid my_client successfully\n")])])]),e("p",[a._v("开启 Topic 日志追踪，将主题能匹配到 't/#' 的消息发布日志输出到 log/topic_t.log:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("$ emqx_ctl log primary-level debug\ndebug\n\n$ emqx_ctl trace start topic "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'t/#'")]),a._v(" log/topic_t.log\ntrace topic t/"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# successfully")]),a._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("提示")]),a._v(" "),e("p",[a._v("即使 "),e("code",[a._v("emqx.conf")]),a._v(" 中，"),e("code",[a._v("log.level")]),a._v(" 设置为 error，使用消息追踪功能仍然能够打印出某 client 或 topic 的 debug 级别的信息。这在生产环境中非常有用。")])]),a._v(" "),e("h3",{attrs:{id:"日志追踪的原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日志追踪的原理"}},[a._v("#")]),a._v(" 日志追踪的原理")]),a._v(" "),e("p",[a._v("日志追踪的原理是给 emqx 安装一个新的 log handler，并设置 handler 的过滤条件。在 "),e("a",{attrs:{href:"#log-level-and-log-handlers"}},[a._v("日志级别和 log handlers")]),a._v(" 小节，我们讨论过 log handler 的细节。")]),a._v(" "),e("p",[a._v("比如使用如下命令启用 client 日志追踪：")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("$ emqx_ctl log primary-level debug "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" emqx_ctl trace start client my_client log/my_client.log\n")])])]),e("p",[a._v("然后查询已经开启的追踪:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("$ emqx_ctl trace list\nTrace"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("clientid"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("my_client, "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("level")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("debug, "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("destination")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"log/my_client.log"')]),a._v(", "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("status")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("started"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),e("p",[a._v('在后台，emqx 会安装一个新的 log handler，并给其指定过滤条件为：仅当 ClientID 为 "my_client" 的时候，输出日志：')]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("$ emqx_ctl log handlers list\nLogHandler"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("id"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("trace_clientid_my_client, "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("level")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("debug, "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("destination")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("log/my_client.log, "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("status")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("started"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n")])])]),e("p",[a._v("这里看到新添加的 log handler 的 id 为 trace_clientid_my_client，并且 handler level 为 debug。这就是为什么在 trace 之前，我们必须将 primary log level 设置为 debug。")]),a._v(" "),e("p",[a._v("如果使用默认的 primary log level (warning)，这个log handler 永远不会输出 warning 以下的日志消息。")]),a._v(" "),e("p",[a._v("另外，由于我们是启用了一个新的 log handler，所以我们的日志追踪不受控制台日志和 emqx.log.N 文件日志的级别的约束。即使 log.level = warning，我们任然可以追踪到 my_client 的 debug 级别的日志。")])])}),[],!1,null,null,null);s.default=r.exports}}]);