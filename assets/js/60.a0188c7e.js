(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{500:function(t,n,s){"use strict";s.r(n);var e=s(7),u=Object(e.a)({},(function(){var t=this.$createElement,n=this._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("p",[this._v("在尝试任何设备的接入之前，首先要清楚需要做什么。\n连接任何设备都离不开三个点：传感器设备、DTU、平台。传感器与DTU保持一个通讯，通过特定代码获得传感器数据。那这个特定代码就是我们配置的产品物模型，接着平台通过指令通道下发封装后的指令到DTU，DTU完成与传感器的数据交互在反馈给平台实现闭环。\n理解后设备连接也简单，两个设备通上电，然后用线把两个传感器的485口对接就完成了。接下去就开始读产品说明书，串口4项数据贯通DTU和传感器的通讯。然后将DTU设置连接到你的服务器上，找一个空闲通道号设置好。\n接着按实际情况为这个通道号配上合适的采集通道。加上两个公用的通道就能完成了。然后在产品里配置物模型。对于物模型而言，所需数据在说明书内都可以找到，实在不行让厂家提供收发代码，看懂格式填进去就可以了。\n最后把几个通道配进去，重启通道和产品就可以了。设备不上线你重启刷新，看看通道日志有没有DTU发数据上来。部分文档后面都有排错的方法。实在无法解决可以去github下Issues留言或者网页下面留言。")]),this._v(" "),n("p",[this._v("多个基于Modbus协议的传感设备由一个DTU进行监管：\n1.获得多个设备时，先逐一查看各设备串口信息，包括波特率、数据位、校验位、停止位。之后用485转usb连接电脑与设备，并在电脑上下载串口调试工具。在确保建立连接成功后，按照说明书的提示向该设备发送指令做出反应。完成后记录指令的数据。\n2.当你完成各个传感设备的检测后，我们会获得两组数据：串口数据、指令数据。首先我们将各设备的串口数据进行对比，必须确保它们相同。如若发现部分串口数据不同，则自行按照最优方式将其同步。下一步是对地址码的校验，地址码是指从机的地址即下发指令的第一字节（8位）。\n为防止各设备信息查询发生冲突，必须保证每一个传感器设备对应的地址吗都不相同。发生冲突时自行按说明书代码进行更改。\n3.当完成多个传感器信息调整后，将这些传感器485线连在一起后对接485转usb串口。在电脑上进行最后一次测试，保证发送的每条查询指令都能得到设备的应答。\n4.将传感设备连接到DTU上，对DTU串口、端口等进行配置。然后在平台的产品内配置物模型（填写的数据参考指令代码）。")])])}),[],!1,null,null,null);n.default=u.exports}}]);