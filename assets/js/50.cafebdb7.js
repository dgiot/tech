(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{563:function(t,s,a){"use strict";a.r(s);var e=a(7),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"jwt-认证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jwt-认证"}},[t._v("#")]),t._v(" JWT 认证")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://jwt.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("JWT"),a("OutboundLink")],1),t._v(" 认证基于 Token 的鉴权机制，不依赖服务端保留客户端的认证信息或者会话信息，在持有密钥的情况下可以批量签发认证信息，是最简便的认证方式。")]),t._v(" "),a("p",[t._v("插件：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("emqx_auth_jwt\n")])])]),a("h2",{attrs:{id:"认证原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#认证原理"}},[t._v("#")]),t._v(" 认证原理")]),t._v(" "),a("p",[t._v("客户端使用 Token 作为用户名或密码（取决于插件配置），发起连接时 EMQ X 使用配置中的密钥、证书进行解密，如果能成功解密则认证成功，否则认证失败。")]),t._v(" "),a("p",[t._v("默认配置下启用 JWT 认证后，你可以通过任意用户名+以下密码进行连接：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImF1dGhvciI6IndpdndpdiIsInNpdGUiOiJodHRwczovL3dpdndpdi5jb20ifSwiZXhwIjoxNTgyMjU1MzYwNjQyMDAwMCwiaWF0IjoxNTgyMjU1MzYwfQ.FdyAx2fYahm6h3g47m88ttyINzptzKy_speimyUcma4\n")])])]),a("h2",{attrs:{id:"配置项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置项"}},[t._v("#")]),t._v(" 配置项")]),t._v(" "),a("p",[t._v("要启用 JWT 认证，需要在 "),a("code",[t._v("etc/plugins/emqx_auth_jwt.conf")]),t._v(" 中配置以下内容：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# etc/plugins/emqx_auth_jwt.conf")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 密钥")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 使用 HMAC 算法校验 Token 的密钥")]),t._v("\nauth.jwt.secret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" emqxsecret\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## RSA 或 ECDSA 公钥文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 使用 RSA 或 ECDSA 算法校验 Token 的公钥")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#auth.jwt.pubkey = etc/certs/jwt_public_key.pem")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## JWKs 的服务器地址")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## EMQ X 会从 JWKs 服务器获取密钥列表，并用于验证 Token")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## JWKs 规范见: http://self-issued.info/docs/draft-ietf-jose-json-web-key.html")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#auth.jwt.jwks = https://127.0.0.1:8080/jwks")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## JWKs 密钥刷新时间")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#auth.jwt.jwks.refresh_interval = 5m")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 客户端携带 Token 的方式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Value: username | password")]),t._v("\nauth.jwt.from "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" password\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 是否校验 JWT 携带的字段")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Value: on | off")]),t._v("\nauth.jwt.verify_claims "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" off\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 字段校验列表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 配置格式：auth.jwt.verify_claims.$name = $expected")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##   $name 为需要校验的 JWT 的 payload 中的字段名称")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##   $expected 为期待值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## $expected 可用的占位符为")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##   - %u: username")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##   - %c: clientid")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 例如：校验 JWT 的 payload 中的 username 是否与")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 客户端(MQTT协议)中携带的 username 一致")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#auth.jwt.verify_claims.username = %u")]),t._v("\n")])])]),a("h3",{attrs:{id:"auth-jwt-from"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#auth-jwt-from"}},[t._v("#")]),t._v(" auth.jwt.from")]),t._v(" "),a("p",[t._v("客户端携带 JWT 的位置，用于配置客户端 JWT 字符串携带位置，可选 username 与 password。")]),t._v(" "),a("h3",{attrs:{id:"auth-jwt-verify-claims"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#auth-jwt-verify-claims"}},[t._v("#")]),t._v(" auth.jwt.verify_claims")]),t._v(" "),a("p",[t._v("如果你启用了 "),a("code",[t._v("auth.jwt.verify_claims")]),t._v(" 选项，认证插件在验证 JWT 有效性之后还会进一步验证 Payload 中的数据有效性。")]),t._v(" "),a("p",[t._v("假设你的 Payload 为：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"username"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"emqx_client_username"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("你可以使用如下配置，当客户端携带此 Token 时，将验证客户端 "),a("code",[t._v("username")]),t._v(" "),a("strong",[t._v("是否等于")]),t._v(" "),a("code",[t._v("emqx_client_username")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Variables:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##   - %u: username")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##   - %c: clientid")]),t._v("\nauth.jwt.verify_claims.username "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" %u\n")])])]),a("p",[t._v("支持使用固定值或当前客户端信息进行验证：")]),t._v(" "),a("ul",[a("li",[t._v("%u：当前客户端 username")]),t._v(" "),a("li",[t._v("%c：当前客户端 client id")])]),t._v(" "),a("h2",{attrs:{id:"密钥配置和算法支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#密钥配置和算法支持"}},[t._v("#")]),t._v(" 密钥配置和算法支持")]),t._v(" "),a("p",[t._v("JWT 认证支持以三种方式配置密钥，这三种方式分别对应三种类型的算法支持：")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("auth.jwt.secret")]),t._v("：对称加密的方式，验证 JWT 的 Token 字段。它支持的算法有：")]),t._v(" "),a("ul",[a("li",[t._v("HS256 - HMAC，使用 SHA-256 哈希算法。")]),t._v(" "),a("li",[t._v("HS384 - HMAC，使用 SHA-384 哈希算法。")]),t._v(" "),a("li",[t._v("HS512 - HMAC，使用 SHA-512 哈希算法。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("auth.jwt.pubkey")]),t._v("：使用非对称加密的方式，验证 JWT 的 Token 字段。它支持的算法有：")]),t._v(" "),a("ul",[a("li",[t._v("RS256 - RSA，使用 SHA-256 哈希算法。")]),t._v(" "),a("li",[t._v("RS384 - RSA，使用 SHA-384 哈希算法。")]),t._v(" "),a("li",[t._v("RS512 - RSA，使用 SHA-512 哈希算法。")]),t._v(" "),a("li",[t._v("ES256 - ECDSA，使用 P-256 曲线。")]),t._v(" "),a("li",[t._v("ES384 - ECDSA，使用 P-384 曲线。")]),t._v(" "),a("li",[t._v("ES512 - ECDSA，使用 P-512 曲线。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("auth.jwt.jwks")]),t._v("：配置为 "),a("a",{attrs:{href:"http://self-issued.info/docs/draft-ietf-jose-json-web-key.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("JWKs"),a("OutboundLink")],1),t._v(" 服务器地址，从 JWKs 服务器中获取可用的密钥列表。")])])]),t._v(" "),a("p",[t._v("该三类密钥允许同时配置。EMQ X 在验证 Token 时会按 "),a("code",[t._v("auth.jwt.secret")]),t._v("，"),a("code",[t._v("auth.jwt.pubkey")]),t._v("，"),a("code",[t._v("auth.jwt.jwks")]),t._v(" 顺序检查。")]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("警告")]),t._v(" "),a("p",[t._v("JWT 本身包含了认证信息，一旦泄露，任何人都可以获得该令牌的所有权限，使用 JWT 时建议启用 TLS 加密传输。\nJWT 使用过程中无法在过期前废止某个 Token，请妥善设置有效时长并保管好密钥等加密信息。")])])])}),[],!1,null,null,null);s.default=n.exports}}]);