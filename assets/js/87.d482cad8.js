(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{655:function(e,v,_){"use strict";_.r(v);var t=_(9),a=Object(t.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"主题重写"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#主题重写"}},[e._v("#")]),e._v(" 主题重写")]),e._v(" "),_("p",[e._v("EMQ X 的主题重写功能支持根据用户配置的规则在客户端订阅主题、发布消息、取消订阅的时候将 A 主题重写为 B 主题。")]),e._v(" "),_("p",[e._v("EMQ X 的 "),_("RouterLink",{attrs:{to:"/zh/backend/emqx/advanced/advanced/retained.html"}},[e._v("保留消息")]),e._v(" 和 "),_("RouterLink",{attrs:{to:"/zh/backend/emqx/advanced/advanced/delay-publish.html"}},[e._v("延迟发布")]),e._v(" 可以与主题重写配合使用，例如，当用户想使用延迟发布功能，但不方便修改客户端发布的主题时，可以使用主题重写将相关主题重写为延迟发布的主题格式。")],1),e._v(" "),_("h2",{attrs:{id:"启停主题重写功能"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#启停主题重写功能"}},[e._v("#")]),e._v(" 启停主题重写功能")]),e._v(" "),_("p",[e._v("主题重写功能由 "),_("code",[e._v("emqx_mod_rewrite")]),e._v(" 内置模块提供, 此功能默认关闭，支持在 EMQ X Broker 运行期间动态启停，请参见 "),_("RouterLink",{attrs:{to:"/zh/backend/emqx/advanced/internal-modules.html"}},[e._v("内置模块")]),e._v("。")],1),e._v(" "),_("h2",{attrs:{id:"配置主题重写规则"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#配置主题重写规则"}},[e._v("#")]),e._v(" 配置主题重写规则")]),e._v(" "),_("p",[e._v("EMQ X 的主题重写规则需要用户自行配置，用户可以自行添加多条主题重写规则，规则的数量没有限制，但由于任何携带主题的 MQTT 报文都需要匹配一遍重写规则，因此此功能在高吞吐场景下带来的性能损耗与规则数量是成正比的，用户需要谨慎地使用此功能。")]),e._v(" "),_("p",[e._v("每条主题重写规则的格式如下：")]),e._v(" "),_("div",{staticClass:"language-bash extra-class"},[_("pre",{pre:!0,attrs:{class:"language-bash"}},[_("code",[e._v("module.rewrite.pub.rule."),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("number"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" 主题过滤器 正则表达式 目标表达式\nmodule.rewrite.sub.rule."),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("number"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" 主题过滤器 正则表达式 目标表达式\n")])])]),_("p",[e._v("重写规则分为 Pub 规则和 Sub 规则，Pub 规则匹配 PUSHLISH 报文携带的主题，Sub 规则匹配 SUBSCRIBE、UNSUBSCRIBE 报文携带的主题。")]),e._v(" "),_("p",[e._v("每条重写规则都由以空格分隔的主题过滤器、正则表达式、目标表达式三部分组成。在主题重写功能开启的前提下，EMQ X 在收到诸如 PUBLISH 报文等带有主题的 MQTT 报文时，将使用报文中的主题去依次匹配配置文件中规则的主题过滤器部分，一旦成功匹配，则使用正则表达式提取主题中的信息，然后替换至目标表达式以构成新的主题。")]),e._v(" "),_("p",[e._v("目标表达式中可以使用 "),_("code",[e._v("$N")]),e._v(" 这种格式的变量匹配正则表达中提取出来的元素，"),_("code",[e._v("$N")]),e._v(" 的值为正则表达式中提取出来的第 N 个元素，比如 "),_("code",[e._v("$1")]),e._v(" 即为正则表达式提取的第一个元素。")]),e._v(" "),_("p",[e._v("需要注意的是，EMQ X 使用倒序读取配置文件中的重写规则，当一条主题可以同时匹配多条主题重写规则的主题过滤器时，EMQ X 仅会使用它匹配到的第一条规则进行重写，如果该条规则中的正则表达式与 MQTT 报文主题不匹配，则重写失败，不会再尝试使用其他的规则进行重写。因此用户在使用时需要谨慎的设计 MQTT 报文主题以及主题重写规则。")]),e._v(" "),_("h2",{attrs:{id:"示例"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[e._v("#")]),e._v(" 示例")]),e._v(" "),_("p",[e._v("假设 "),_("code",[e._v("etc/emqx.conf")]),e._v(" 文件中已经添加了以下主题重写规则：")]),e._v(" "),_("div",{staticClass:"language-bash extra-class"},[_("pre",{pre:!0,attrs:{class:"language-bash"}},[_("code",[e._v("module.rewrite.sub.rule.1 "),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" y/+/z/"),_("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# ^y/(.+)/z/(.+)$ y/z/$2")]),e._v("\nmodule.rewrite.pub.rule.1 "),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" x/"),_("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# ^x/y/(.+)$ z/y/x/$1")]),e._v("\nmodule.rewrite.pub.rule.2 "),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" x/y/+ ^x/y/"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("d+"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("$ z/y/"),_("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$1")]),e._v("\n")])])]),_("p",[e._v("此时我们分别订阅 "),_("code",[e._v("y/a/z/b")]),e._v("、"),_("code",[e._v("y/def")]),e._v("、"),_("code",[e._v("x/1/2")]),e._v("、"),_("code",[e._v("x/y/2")]),e._v("、"),_("code",[e._v("x/y/z")]),e._v(" 五个主题：")]),e._v(" "),_("ul",[_("li",[_("p",[e._v("当客户端订阅 "),_("code",[e._v("y/def")]),e._v(" 主题时，"),_("code",[e._v("y/def")]),e._v(" 不匹配任何一个主题过滤器，因此不执行主题重写，直接订阅 "),_("code",[e._v("y/def")]),e._v(" 主题。")])]),e._v(" "),_("li",[_("p",[e._v("当客户端订阅 "),_("code",[e._v("y/a/z/b")]),e._v(" 主题时，"),_("code",[e._v("y/a/z/b")]),e._v(" 匹配 "),_("code",[e._v("y/+/z/#")]),e._v(" 主题过滤器，EMQ X 执行 "),_("code",[e._v("module.rewrite.sub.rule.1")]),e._v(" 规则，通过正则正则表达式匹配出元素 "),_("code",[e._v("[a、b]")]),e._v(" ，将匹配出来的第二个元素带入 "),_("code",[e._v("y/z/$2")]),e._v("，实际订阅了 "),_("code",[e._v("y/z/b")]),e._v(" 主题。")])]),e._v(" "),_("li",[_("p",[e._v("当客户端向 "),_("code",[e._v("x/1/2")]),e._v(" 主题发送消息时，"),_("code",[e._v("x/1/2")]),e._v(" 匹配 "),_("code",[e._v("x/#")]),e._v(" 主题过滤器，EMQ X 执行 "),_("code",[e._v("module.rewrite.pub.rule.1")]),e._v(" 规则，通过正则表达式未匹配到元素，不执行主题重写，因此直接向 "),_("code",[e._v("x/1/2")]),e._v(" 主题发送消息。")])]),e._v(" "),_("li",[_("p",[e._v("当客户端向 "),_("code",[e._v("x/y/2")]),e._v(" 主题发送消息时，"),_("code",[e._v("x/y/2")]),e._v(" 同时匹配 "),_("code",[e._v("x/#")]),e._v(" 和 "),_("code",[e._v("x/y/+")]),e._v(" 两个主题过滤器，EMQ X 通过倒序读取配置，所以优先匹配 "),_("code",[e._v("module.rewrite.pub.rule.2")]),e._v("，通过正则替换，实际向 "),_("code",[e._v("z/y/2")]),e._v(" 主题发送消息。")])]),e._v(" "),_("li",[_("p",[e._v("当客户端向 "),_("code",[e._v("x/y/z")]),e._v(" 主题发送消息时，"),_("code",[e._v("x/y/z")]),e._v(" 同时匹配 "),_("code",[e._v("x/#")]),e._v(" 和 "),_("code",[e._v("x/y/+")]),e._v(" 两个主题过滤器，EMQ X 通过倒序读取配置，所以优先匹配 "),_("code",[e._v("module.rewrite.pub.rule.2，通过正则表达式未匹配到元素，不执行主题重写，直接向")]),e._v("x/y/z"),_("code",[e._v("主题发送消息。需要注意的是，即使")]),e._v("module.rewrite.pub.rule.2"),_("code",[e._v("的正则表达式匹配失败，也不会再次去匹配")]),e._v("module.rewrite.pub.rule.1` 的规则。")])])])])}),[],!1,null,null,null);v.default=a.exports}}]);