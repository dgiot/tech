(window.webpackJsonp=window.webpackJsonp||[]).push([[254],{788:function(t,s,a){"use strict";a.r(s);var r=a(10),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据"}},[t._v("#")]),t._v(" 数据")]),t._v(" "),a("p",[t._v("Parse SDK被设计成让开发者无需考虑数据是如何被存储的，只需要添加数据到对象，数据就会被正确的存储。")]),t._v(" "),a("p",[t._v("然而某些情况下，了解数据是如何被存储到云端，是很有用的。")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"数据存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据存储"}},[t._v("#")]),t._v(" 数据存储")]),t._v(" "),a("p",[t._v("本质上，Parse存储的是JSON格式，所以任何可以转换成JSON的数据都可以被存储到Parse。这在对象章节有做介绍。")]),t._v(" "),a("p",[t._v("键名中"),a("code",[t._v("$")]),t._v("或"),a("code",[t._v(".")]),t._v("以及"),a("code",[t._v("__type")]),t._v("是被保护的关键词，用以处理其他类型，所以不要使用它们作为键名。键名只能由数字、字母和下划线组成，并且必须以字母开头，键值可以是任何能被JSON编码的类型。")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"数据类型锁定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型锁定"}},[t._v("#")]),t._v(" 数据类型锁定")]),t._v(" "),a("p",[t._v("当一个class表创建完成，它还没有被定义各字段类型，这意味着你创建首个class对象的字段类型，可以是任何你希望的类型。")]),t._v(" "),a("p",[t._v("不过，一旦字段类型被设置了至少一次，这个字段的类型将被锁定为设置的字段类型。举个例子，加入你有一个"),a("code",[t._v("User")]),t._v("对象，你为其设置了"),a("code",[t._v("String")]),t._v("类型的"),a("code",[t._v("name")]),t._v("字段，那么以后"),a("code",[t._v("name")]),t._v("的数据类型只能是"),a("code",[t._v("String")]),t._v("，如果你尝试保存其他类型到这个字段，服务器会返回错误。")]),t._v(" "),a("p",[t._v("有一个特殊情况，就是任何类型的字段都可以被设置为"),a("code",[t._v("null")]),t._v("。")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"数据浏览器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据浏览器"}},[t._v("#")]),t._v(" 数据浏览器")]),t._v(" "),a("p",[t._v("数据浏览器是用来增删查改你的应用数据的后台界面，在这里，你可以看到保存的每个对象的原始JSON值。")]),t._v(" "),a("p",[t._v("当你使用这个界面时，你需要注意一下几点：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("objectId")]),t._v("，"),a("code",[t._v("createdAt")]),t._v("，"),a("code",[t._v("updatedAt")]),t._v("字段不能被编辑，它们是自动设置的；")]),t._v(" "),a("li",[t._v("值为“(empty)”的字段表示其对象字段还未被设置，这和值为"),a("code",[t._v("null")]),t._v("不同；")]),t._v(" "),a("li",[t._v("你可以选中之后点击删除键删除字段的内容；")])]),t._v(" "),a("p",[t._v("数据浏览器也是测试云代码功能(比如beforeSave)的到地方，当你从数据浏览器修改或删除一个对象，就会触发对应的云代码，就像他们被你的客户端代码修改或删除了一样。")]),t._v(" "),a("hr"),t._v(" "),a("blockquote",[a("p",[t._v("译者注：本章的数据导入和数据导出两小节，其功能在Parse未关闭服务前，在Parse.com上可用；现在仪表盘上已经移除此功能，开发者可以使用MongoDB可视化工具导入导出数据。下面内容可跳过。")])]),t._v(" "),a("h2",{attrs:{id:"导入数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导入数据"}},[t._v("#")]),t._v(" 导入数据")]),t._v(" "),a("p",[t._v("你可以通过CSV或JSON文件导入数据到你的Parse应用。要通过一个SCV或JSON文件创建一个class表，可以进入数据浏览器，点击左栏的“import”按钮。")]),t._v(" "),a("p",[t._v("JSON文件的格式是我们的REST格式的对象数组，或者一个数组格式的results对象，它必须遵循混JSON规范。一个JSON文件的标准格式类似这样：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"results"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"score"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1337")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"playerName"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sean Plott"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cheatMode"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"createdAt"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2012-07-11T20:56:12.347Z"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"updatedAt"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2012-07-11T20:56:12.347Z"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"objectId"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fchpZwSuGG"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("两种格式的对象包含的键值应符合一下要求：")]),t._v(" "),a("ul",[a("li",[t._v("键名只能包含数字、字母和下划线，并且已字母开头；")]),t._v(" "),a("li",[t._v('键值不能包含强行换行"\\n"；')])]),t._v(" "),a("p",[t._v("通常一个对象被保存到Parse云后，会被支配一个唯一的标识符，即"),a("code",[t._v("objectId")]),t._v("，还有"),a("code",[t._v("createdAt")]),t._v("和"),a("code",[t._v("updatedAt")]),t._v("字段也会被创建。当你从JSON文件导入数据时，这几个字段可以手动设置。请记住以下几点：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("objectId")]),t._v("字段的值应是10个唯一存在的由字母和数字组成的字符串；")]),t._v(" "),a("li",[t._v("当你设置"),a("code",[t._v("createdAt")]),t._v("或"),a("code",[t._v("updatedAt")]),t._v("字段时，值应为IOS 8601标准的时间戳；")])]),t._v(" "),a("p",[t._v("除了公开的字段，Parse用户表中的对象还可以可以设置bryptPassword字段，它的值是bcrypt哈希后加盐得到的字符串，详情可以查看"),a("a",{attrs:{href:"http://stackoverflow.com/a/5882472/1351961",target:"_blank",rel:"noopener noreferrer"}},[t._v("StackOverflow answer"),a("OutboundLink")],1),t._v("。大多数给予OpenSSL的bcrypt实现都内置了生成这个字符串的方法。")]),t._v(" "),a("p",[t._v("包含User对象的文件格式类似这样：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"results"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"username"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cooldude"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"createdAt"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1983-09-13T22:42:30.548Z"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"updatedAt"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2015-09-04T10:12:42.137Z"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"objectId"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ttttSEpfXm"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sessionToken"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dfwfq3dh0zwe5y2sqv514p4ib"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bcryptPassword"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$2a$10$ICV5UeEf3lICfnE9W9pN9.O9Ved/ozNo7G83Qbdk5rmyvY8l16MIK"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("hr"),t._v(" "),a("h2",{attrs:{id:"导出数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导出数据"}},[t._v("#")]),t._v(" 导出数据")]),t._v(" "),a("p",[t._v("你可以在你的应用设置页导出数据。数据导出的网络优先级低于产品请求的优先级，所以可以保证应用请求的查询能被顺利完成，所以你的数据导出速度可能会比较低。")]),t._v(" "),a("h3",{attrs:{id:"导出格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导出格式"}},[t._v("#")]),t._v(" "),a("em",[t._v("导出格式")])]),t._v(" "),a("p",[t._v("每一个数据表会导出一个我们的REST API所使用JSON格式的压缩文件。由于数据本质上是以JSON格式存储，所以我们可以确保导出的数据和Parse保存的数据相同。其他不能表示Parse数据类型的格式，比如CSV，如果你想使用CSV格式，可以使用网上的JSON-to-CSV转换工具。")]),t._v(" "),a("h3",{attrs:{id:"离线分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#离线分析"}},[t._v("#")]),t._v(" "),a("em",[t._v("离线分析")])]),t._v(" "),a("p",[t._v("对于离线分析，我们推荐你用交替的方法访问你的数据，以免一次提取整个数据表。比如，你可以尝试只导出自上次导出以后发生了变化的数据。这里有一些实现方法：")]),t._v(" "),a("ul",[a("li",[t._v("在Node应用中使用SDK，"),a("code",[t._v("Parse.Query.eac()")]),t._v("允许你提取每个匹配的对象。你可以给查询条件设置为查询自上次应用运行后发生了改变的数据，你的node应用可以将这些数据写入磁盘进行离线分析。")]),t._v(" "),a("li",[t._v("在脚本中使用REST API，你可以针对你的class表使用skip、limit来查询，然后将数据写入磁盘进行离线分析。你可以再加上只有新被修改的对象可以被提取的条件。")]),t._v(" "),a("li",[t._v("如果上面两种方法不能满足你的需求，你可以尝试使用数据浏览器的选择性数据导出。通过点击漏洞图标为需要的数据创建一个过滤器，比如过滤出只有新被修改的数据，当过滤器被应用后，点击数据浏览器右上方的导出数据图标即可。这种导出方法只会导出符合你条件的数据。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);