(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{722:function(a,s,e){"use strict";e.r(s);var t=e(8),r=Object(t.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"消息桥接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#消息桥接"}},[a._v("#")]),a._v(" 消息桥接")]),a._v(" "),e("p",[a._v("EMQ X 支持两种桥接方式:")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("RPC 桥接: 使用 Erlang RPC 协议的桥接方式，只能在 EMQ X 间使用")])]),a._v(" "),e("li",[e("p",[a._v("MQTT 桥接: 使用 MQTT 协议、作为客户端连接到远程 Broker 的桥接方式，可桥接到其他 MQTT Broker 以及 EMQ X Broker")])])]),a._v(" "),e("p",[a._v("其概念如下图所示:")]),a._v(" "),e("p",[e("img",{attrs:{src:"http://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/backend/emqx/bridge/assets/bridge.png",alt:"bridge.png"}})]),a._v(" "),e("p",[a._v("发布者可通过桥接将消息发布到远程的 Broker:")]),a._v(" "),e("p",[e("img",{attrs:{src:"http://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/backend/emqx/bridge/assets/bridges_3.png",alt:"bridges_3.png"}})]),a._v(" "),e("p",[a._v("EMQ X 根据不同的 name 来区分不同的 bridge。可在 "),e("code",[a._v("etc/plugins/emqx_bridge_mqtt.conf")]),a._v(" 中添加 Bridge:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bridge.mqtt.aws.address "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("211.182")]),a._v(".34.1:1883\n\nbridge.mqtt.huawei.address "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("54.33")]),a._v(".120.8:1883\n")])])]),e("p",[a._v("该项配置声明了两个 bridge，一个名为 "),e("code",[a._v("aws")]),a._v("，另一个名为 "),e("code",[a._v("huawei")]),a._v("，并分别指向响应的服务地址，使用 MQTT 方式桥接。")]),a._v(" "),e("p",[a._v("如果该配置的值是另一个 EMQ X 的节点名，则使用 RPC 方式桥接:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bridge.mqtt.emqx2.address "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" emqx2@57.122.76.34\n")])])]),e("p",[a._v("使用桥接功能需要启动 "),e("code",[a._v("emqx_bridge_mqtt")]),a._v(" 插件:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("$ emqx_ctl plugins load emqx_bridge_mqtt\n\nok\n")])])]),e("h2",{attrs:{id:"rpc-桥接的优缺点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rpc-桥接的优缺点"}},[a._v("#")]),a._v(" RPC 桥接的优缺点")]),a._v(" "),e("p",[a._v("RPC 桥接的优点在于其不涉及 MQTT 协议编解码，效率高于 MQTT 桥接。")]),a._v(" "),e("p",[a._v("RPC 桥接的缺点:")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("RPC 桥接只能将两个 EMQ X 桥接在一起（版本须相同），无法桥接 EMQ X 到其他的 MQTT Broker 上")])]),a._v(" "),e("li",[e("p",[a._v("RPC 桥接只能将本地的消息转发到远程桥接节点上，无法将远程桥接节点的消息同步到本地节点上")])])]),a._v(" "),e("h2",{attrs:{id:"rpc-桥接举例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rpc-桥接举例"}},[a._v("#")]),a._v(" RPC 桥接举例")]),a._v(" "),e("p",[a._v("假设有两个 emqx 节点:")]),a._v(" "),e("table",[e("thead",[e("tr",[e("th",[a._v("名称")]),a._v(" "),e("th",[a._v("节点")]),a._v(" "),e("th",[a._v("MQTT 端口")])])]),a._v(" "),e("tbody",[e("tr",[e("td",[a._v("emqx1")]),a._v(" "),e("td",[e("a",{attrs:{href:"mailto:emqx1@192.168.1.1"}},[a._v("emqx1@192.168.1.1")])]),a._v(" "),e("td",[a._v("1883")])]),a._v(" "),e("tr",[e("td",[a._v("emqx2")]),a._v(" "),e("td",[e("a",{attrs:{href:"mailto:emqx2@192.168.1.2"}},[a._v("emqx2@192.168.1.2")])]),a._v(" "),e("td",[a._v("1883")])])])]),a._v(" "),e("p",[a._v("现在我们要将 "),e("code",[a._v("emqx1")]),a._v(" 桥接到 "),e("code",[a._v("emqx2")]),a._v("。首先需要在 "),e("code",[a._v("emqx1")]),a._v(" 的 "),e("code",[a._v("etc/plugins/emqx_bridge_mqtt.conf")]),a._v(" 配置文件里添加 Bridge 配置并指向"),e("code",[a._v("emqx2")]),a._v(":")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bridge.mqtt.emqx2.address "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" emqx2@192.168.1.2\n")])])]),e("p",[a._v("接下来定义 "),e("code",[a._v("forwards")]),a._v(" 规则，这样本节点上发到 "),e("code",[a._v("sensor1/#")]),a._v("、"),e("code",[a._v("sensor2/#")]),a._v(" 上的消息都会被转发到 "),e("code",[a._v("emqx2")]),a._v(":")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bridge.mqtt.emqx2.forwards "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" sensor1/"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#,sensor2/#")]),a._v("\n")])])]),e("p",[a._v("如果想要在消息转发前给 "),e("code",[a._v("emqx2")]),a._v(" 之前，给主题加上特定前缀，可以设置挂载点:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bridge.mqtt.emqx2.mountpoint "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" bridge/emqx2/"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${node}")]),a._v("/\n")])])]),e("p",[a._v("挂载点利于 "),e("code",[a._v("emqx2")]),a._v(" 区分桥接消息和本地消息。例如，以上配置中，原主题为 "),e("code",[a._v("sensor1/hello")]),a._v(" 的消息，转发到 "),e("code",[a._v("emqx2")]),a._v(" 后主题会变为 "),e("code",[a._v("bridge/emqx2/emqx1@192.168.1.1/sensor1/hello")]),a._v("。")]),a._v(" "),e("h2",{attrs:{id:"mqtt-桥接举例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mqtt-桥接举例"}},[a._v("#")]),a._v(" MQTT 桥接举例")]),a._v(" "),e("p",[a._v("MQTT 桥接是让 EMQ X 作为 MQTT 客户端连接到远程的 MQTT Broker。")]),a._v(" "),e("p",[a._v("首先需要配置 MQTT 客户端参数:")]),a._v(" "),e("p",[a._v("远程 Broker 地址:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bridge.mqtt.aws.address "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("211.182")]),a._v(".34.1:1883\n")])])]),e("p",[a._v("MQTT 协议版本，可以为 "),e("code",[a._v("mqttv3")]),a._v("、"),e("code",[a._v("mqttv4")]),a._v(" 或 "),e("code",[a._v("mqttv5")]),a._v(" 其中之一:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bridge.mqtt.aws.proto_ver "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" mqttv4\n")])])]),e("p",[a._v("MQTT 客户端的 clientid:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bridge.mqtt.aws.clientid "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" bridge_emq\n")])])]),e("p",[a._v("MQTT 客户端的 username 字段:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bridge.mqtt.aws.username "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" user\n")])])]),e("p",[a._v("MQTT 客户端的 password 字段:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bridge.mqtt.aws.password "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("passwd")]),a._v("\n")])])]),e("p",[a._v("Keepalive 设置:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bridge.mqtt.aws.keepalive "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 60s\n")])])]),e("p",[a._v("然后是客户端的 clean_start 字段，有些 IoT Hub 要求 clean_start（或 clean_session) 字段必须为 "),e("code",[a._v("true")]),a._v(":")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bridge.mqtt.aws.clean_start "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n")])])]),e("p",[a._v("可设置桥接断线重连间隔:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bridge.mqtt.aws.reconnect_interval "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 30s\n")])])]),e("p",[a._v("如需使用 TLS 连接，可以设置 "),e("code",[a._v("bridge.mqtt.aws.ssl = on")]),a._v(" 并设置 TLS 证书:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bridge.mqtt.aws.ssl "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" off\nbridge.mqtt.aws.cacertfile "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" etc/certs/cacert.pem\nbridge.mqtt.aws.certfile "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" etc/certs/client-cert.pem\nbridge.mqtt.aws.keyfile "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" etc/certs/client-key.pem\nbridge.mqtt.aws.ciphers "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" ECDHE-ECDSA-AES256-GCM-SHA384,ECDHE-RSA-AES256-GCM-SHA384\nbridge.mqtt.aws.tls_versions "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" tlsv1.2,tlsv1.1,tlsv1\n")])])]),e("p",[a._v("接下来定义 "),e("code",[a._v("forwards")]),a._v(" 规则，这样本节点上发到 "),e("code",[a._v("sensor1/#")]),a._v("、"),e("code",[a._v("sensor2/#")]),a._v(" 上的消息都会被转发到远程 Broker:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bridge.mqtt.aws.forwards "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" sensor1/"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#,sensor2/#")]),a._v("\n")])])]),e("p",[a._v("还可指定 QoS1 与 QoS2 消息的重传间隔以及批量发送报文数:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bridge.mqtt.aws.retry_interval "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 20s\nbridge.mqtt.aws.max_inflight_batches "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("32")]),a._v("\n")])])]),e("p",[a._v("如果想要在消息转发前给 "),e("code",[a._v("aws")]),a._v(" 之前，给主题加上特定前缀，可以设置挂载点，详见 "),e("a",{attrs:{href:"#rpc-bridge-example"}},[a._v("RPC 桥接举例")]),a._v(" 章节:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bridge.mqtt.aws.mountpoint "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" bridge/aws/"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${node}")]),a._v("/\n")])])]),e("p",[a._v('如果想让本地 Broker "拉取" 远程 Broker 的消息，可以向远程 Broker 订阅某些主题:')]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bridge.mqtt.aws.subscription.1.topic "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" cmd/topic1\nbridge.mqtt.aws.subscription.1.qos "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n")])])]),e("h3",{attrs:{id:"emq-x-桥接缓存配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#emq-x-桥接缓存配置"}},[a._v("#")]),a._v(" EMQ X 桥接缓存配置")]),a._v(" "),e("p",[a._v("EMQ X 的 Bridge 拥有消息缓存机制，当 Bridge 连接断开时会将 forwards 主题的消息缓存，等到桥接恢复时，再把消息重新转发到远程节点上。缓存机制同时适用于 RPC 桥接和 MQTT 桥接。")]),a._v(" "),e("p",[a._v("设置缓存队列总大小:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bridge.mqtt.aws.queue.max_total_size "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 5GB\n")])])]),e("p",[a._v("将消息缓存到磁盘的某个路径（如不设置，则仅缓存到内存）:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bridge.mqtt.emqx2.queue.replayq_dir "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" data/emqx_emqx2_bridge/\n")])])]),e("p",[a._v("设置单个缓存文件的大小，如超过则会创建新的文件来存储消息队列:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("bridge.mqtt.emqx2.queue.replayq_seg_bytes "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 10MB\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);