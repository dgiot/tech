(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{748:function(_,t,v){"use strict";v.r(t);var e=v(8),r=Object(e.a)({},(function(){var _=this,t=_.$createElement,v=_._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"速率限制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#速率限制"}},[_._v("#")]),_._v(" 速率限制")]),_._v(" "),v("p",[_._v("EMQ X 提供对接入速度、消息速度的限制：当客户端连接请求速度超过指定限制的时候，暂停新连接的建立；当消息接收速度超过指定限制的时候，暂停接收消息。")]),_._v(" "),v("p",[_._v("速率限制是一种 "),v("em",[_._v("backpressure")]),_._v(" 方案，从入口处避免了系统过载，保证了系统的稳定和可预测的吞吐。速率限制可在 "),v("code",[_._v("etc/emqx.conf")]),_._v(" 中配置：")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("配置项")]),_._v(" "),v("th",[_._v("类型")]),_._v(" "),v("th",[_._v("默认值")]),_._v(" "),v("th",[_._v("描述")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("listener.tcp.external.max_conn_rate")]),_._v(" "),v("td",[_._v("Number")]),_._v(" "),v("td",[_._v("1000")]),_._v(" "),v("td",[_._v("本节点上允许的最大连接速率 (conn/s)")])]),_._v(" "),v("tr",[v("td",[_._v("zone.external.rate_limit.conn_messagess_in")]),_._v(" "),v("td",[_._v("Number,Duration")]),_._v(" "),v("td",[_._v("无限制")]),_._v(" "),v("td",[_._v("单连接上允许的最大发布速率 (msg/s)")])]),_._v(" "),v("tr",[v("td",[_._v("zone.external.rate_limit.conn_bytes_in")]),_._v(" "),v("td",[_._v("Size,Duration")]),_._v(" "),v("td",[_._v("无限制")]),_._v(" "),v("td",[_._v("单连接上允许的最大报文速率 (bytes/s)")])])])]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("max_conn_rate")]),_._v(" 是单个 emqx 节点上连接建立的速度限制。"),v("code",[_._v("1000")]),_._v(" 代表秒最多允许 1000 个客户端接入。")]),_._v(" "),v("li",[v("strong",[_._v("conn_messages_in")]),_._v(" 是单个连接上接收 PUBLISH 报文的速率限制。"),v("code",[_._v("100,10s")]),_._v(" 代表每个连接上允许收到的最大 PUBLISH 消息速率是每 10 秒 100 个。")]),_._v(" "),v("li",[v("strong",[_._v("conn_bytes_in")]),_._v(" 是单个连接上接收 TCP数据包的速率限制。"),v("code",[_._v("100KB,10s")]),_._v(" 代表每个连接上允许收到的最大 TCP 报文速率是每 10 秒 100KB。")])]),_._v(" "),v("p",[v("code",[_._v("conn_messages_in")]),_._v(" 和 "),v("code",[_._v("conn_bytes_in")]),_._v(" 提供的都是针对单个连接的限制，EMQ X 目前没有提供全局的消息速率限制。")]),_._v(" "),v("h2",{attrs:{id:"速率限制原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#速率限制原理"}},[_._v("#")]),_._v(" 速率限制原理")]),_._v(" "),v("p",[_._v("EMQ X 使⽤"),v("a",{attrs:{href:"https://en.wikipedia.org/wiki/Token_bucket",target:"_blank",rel:"noopener noreferrer"}},[_._v("令牌桶 (Token Bucket)"),v("OutboundLink")],1),_._v(" 算法来对所有的 Rate Limit 来做控制。 令牌桶算法 的逻辑如下图:")]),_._v(" "),v("p",[v("img",{attrs:{src:"http://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/develop_png/zh_CN/assets/token-bucket.jpg",alt:"token-bucket.jpg"}})]),_._v(" "),v("ul",[v("li",[_._v("存在一个可容纳令牌(Token) 的最大值 burst 的桶(Bucket)，最大值 burst 简记为 b 。")]),_._v(" "),v("li",[_._v("存在一个 rate 为每秒向桶添加令牌的速率，简记为 r 。当桶满时则不不再向桶中加⼊入令牌。")]),_._v(" "),v("li",[_._v("每当有 1 个(或 N 个)请求抵达时，则从桶中拿出 1 个 (或 N 个) 令牌。如果令牌不不够则阻塞，等待令牌的⽣生成。")])]),_._v(" "),v("p",[_._v("由此可知该算法中:")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("长期来看，所限制的请求速率的平均值等于 rate 的值。")])]),_._v(" "),v("li",[v("p",[_._v("记实际请求达到速度为 M，且 M > r，那么，实际运⾏中能达到的最大(峰值)速率为 M = b + r，证明：")]),_._v(" "),v("p",[_._v("容易想到，最大速率 M 为：能在1个单位时间内消耗完满状态令牌桶的速度。而桶中令牌的消耗速度为 M - r，故可知：b / (M - r) = 1，得 M = b + r")])])]),_._v(" "),v("h3",{attrs:{id:"令牌桶算法在-emq-x-中的应用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#令牌桶算法在-emq-x-中的应用"}},[_._v("#")]),_._v(" 令牌桶算法在 EMQ X 中的应用")]),_._v(" "),v("p",[_._v("当使用如下配置做报文速率限制的时候：")]),_._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[_._v("zone.external.rate_limit.conn_bytes_in = 100KB,10s\n")])])]),v("p",[_._v("EMQ X 将使用两个值初始化每个连接的 rate-limit 处理器：")]),_._v(" "),v("ul",[v("li",[_._v("rate = 100 KB / 10s = 10240 B/s")]),_._v(" "),v("li",[_._v("burst = 100 KB = 102400 B")])]),_._v(" "),v("p",[_._v("根据 "),v("a",{attrs:{href:"#rate-limit-explanation"}},[_._v("消息速率限制原理")]),_._v(" 中的算法，可知：")]),_._v(" "),v("ul",[v("li",[_._v("长期来看允许的平均速率限制为 10240 B/s")]),_._v(" "),v("li",[_._v("允许的峰值速率为 102400 + 10240 = 112640 B/s")])]),_._v(" "),v("p",[_._v("为提高系统吞吐，EMQ X 的接入模块不会一条一条的从 socket 读取报文，而是每次从 socket 读取 N 条报文。rate-limit 检查的时机就是在收到这 N 条报文之后，准备继续收取下个 N 条报文之前。故实际的限制速率不会如算法一样精准。EMQ X 只提供了一个大概的速率限制。"),v("code",[_._v("N")]),_._v(" 的值可以在 "),v("code",[_._v("etc/emqx.conf")]),_._v(" 中配置：")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("配置项")]),_._v(" "),v("th",[_._v("类型")]),_._v(" "),v("th",[_._v("默认值")]),_._v(" "),v("th",[_._v("描述")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("listener.tcp.external.active_n")]),_._v(" "),v("td",[_._v("Number")]),_._v(" "),v("td",[_._v("100")]),_._v(" "),v("td",[_._v("emqx 每次从 TCP 栈读取多少条消息")])])])])])}),[],!1,null,null,null);t.default=r.exports}}]);