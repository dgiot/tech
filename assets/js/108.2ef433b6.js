(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{558:function(e,t,_){"use strict";_.r(t);var v=_(9),s=Object(v.a)({},(function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"tdengine使用整理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tdengine使用整理"}},[e._v("#")]),e._v(" TDengine使用整理")]),e._v(" "),_("h2",{attrs:{id:"数据库操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据库操作"}},[e._v("#")]),e._v(" 数据库操作")]),e._v(" "),_("p",[_("strong",[e._v("创建一个数据库test")])]),e._v(" "),_("p",[_("code",[e._v("CREATE DATABASE test;")])]),e._v(" "),_("p",[_("strong",[e._v("创建库时候的参数(非必选)")])]),e._v(" "),_("p",[e._v("Keep:数据保留时间。超过此时间后自动删除过期的数据,缺省时默认3650天(十年)")]),e._v(" "),_("p",[e._v("EG: "),_("code",[e._v("CREATE DATABASE test keep 730")]),e._v(";")]),e._v(" "),_("p",[e._v("days: 数据落成文件的时间范围。days 10 表示每十天的数据为一个数据文件，此范围官方推荐为10-100。")]),e._v(" "),_("p",[e._v("EG: "),_("code",[e._v("CREATE DATABASE test keep 730 days 10")]),e._v(";")]),e._v(" "),_("p",[e._v("comp：文件压缩标志位，数据文件的压缩程度。一阶段压缩根据数据的类型进行了相应的压缩。二阶段压缩在一阶段压缩的基础上又用通用压缩算法进行了压缩，压缩率更高。0：关闭，1:一阶段压缩，2:两阶段压缩。默认为2。")]),e._v(" "),_("p",[e._v("EG: "),_("code",[e._v("CREATE DATABASE mydb comp 1")]),e._v(";")]),e._v(" "),_("p",[e._v("replica: 虚拟节点(vnode) 数量,可理解为数据副本数量，一个数据库的数据将会存放在虚拟节点中，多个虚拟节点将会使用m/s主从方式异步备份。")]),e._v(" "),_("p",[e._v("虚拟节点数量必须小于等于集群的节点数(或cpu核心数)，默认与CPU核数相同，可通过maxVgroupsPerDb配置。默认为1。")]),e._v(" "),_("p",[e._v("EG: "),_("code",[e._v("CREATE DATABASE test keep 730 days 10 replica 2")]),e._v(";")]),e._v(" "),_("p",[e._v("quorum: 设置值大于1的话，开启同步复制。异步复制时存在极低概率会数据丢失(主虚拟节点和从虚拟节点同时宕机)。")]),e._v(" "),_("p",[e._v("EG: "),_("code",[e._v("CREATE DATABASE test keep 730 days 10 replica2 quorum 2")]),e._v(";")]),e._v(" "),_("p",[e._v("blocks: TDengine的每个虚拟节点都会占用一些独立的内存做缓存池用，数据放在缓存池中提高查询速度，内存的大小由blocks和cache参数决定。")]),e._v(" "),_("p",[e._v("blocks配置虚拟节点可以有几个内存块,cache设定每个内存块的大小，blocks默认为4个,cache默认16M,也就是说虚拟节点所占的内存默认至少为4*16=66M。官方文档两处不一致，一处blocks默认为6，一处说默认为4。")]),e._v(" "),_("p",[e._v("EG: "),_("code",[e._v("CREATE DATABASE mydb keep 730 days 10 replica 2 quorum 2 blocks 8")]),e._v(";")]),e._v(" "),_("p",[e._v("precision:设定时间精度,默认ms毫秒，us为微秒")]),e._v(" "),_("p",[e._v("EG:"),_("code",[e._v("CREATE DATABASE mydb precision 'us'")]),e._v(";")]),e._v(" "),_("p",[e._v("walLevel：TDengine支持WAL（Write Ahead Log）机制，实现数据的容错。请求到来时，先将请求的原始数据包写入数据库日志文件，等数据成功写入数据库数据文件后，再删除相应的WAL。配置项为0、1和2, 默认为1。")]),e._v(" "),_("p",[e._v("0：不写wal; 1：写wal, 但不执行fsync; 2：写wal, 而且执行fsync。")]),e._v(" "),_("p",[e._v("fsync：当wal设置为2时，执行fsync的周期。设置为0，表示每次写入，立即执行fsync。单位为毫秒，默认值：3000。fsync我理解为虚拟节点的数据同步周期,默认3000毫秒，为0 时表示数据总是立即同步，但会影响效率")]),e._v(" "),_("p",[e._v("minRows: 文件块中记录的最小条数，单位为条，默认值：100。")]),e._v(" "),_("p",[e._v("maxRows: 文件块中记录的最大条数，单位为条，默认值：4096。")]),e._v(" "),_("p",[_("strong",[e._v("显示服务器和客户端的版本信息")])]),e._v(" "),_("p",[e._v("select client_version();")]),e._v(" "),_("p",[e._v("select server_version();")]),e._v(" "),_("p",[_("strong",[e._v("查看服务器状态")])]),e._v(" "),_("p",[e._v("select server_status();")]),e._v(" "),_("p",[_("strong",[e._v("显示所有的数据库的信息，包含数据库的各个参数")]),e._v("\nshow databases;")]),e._v(" "),_("p",[_("strong",[e._v("使用数据库 test")]),e._v("\nuse test ;")]),e._v(" "),_("p",[_("strong",[e._v("删除库")]),e._v("\ndrop database test ;")]),e._v(" "),_("p",[_("strong",[e._v("修改数据的保留时间")]),e._v("\nalter database test keep 365;")]),e._v(" "),_("p",[_("strong",[e._v("修改数据库的副本数")]),e._v("\nalter database test replica 3;")]),e._v(" "),_("p",[_("strong",[e._v("修改数据库的文件压缩标志位")]),e._v("\nalter database test comp 2;")]),e._v(" "),_("p",[_("strong",[e._v("修改数据的同/异步方式，为1表示异步，大于1表示同步，数值越大，表示在同步时主/从节点的确认次数")]),e._v("\nalter database test quorum 2;")]),e._v(" "),_("p",[_("strong",[e._v("修改每个VNODE (TSDB) 中有多少cache大小的内存块")]),e._v("\nalter database test blocks 100;")]),e._v(" "),_("p",[_("strong",[e._v("表操作：")])]),e._v(" "),_("p",[_("strong",[e._v("创建表时timestamp 字段必须为第一个字段类型")]),e._v("\ncreate table if not exists mytable(ts timestamp, column_name int，……);")]),e._v(" "),_("p",[_("strong",[e._v("根据超级表创建子表，子表会复制除超级表里的tag字段外的所有字段,但需子表设定tag内容")])]),e._v(" "),_("p",[e._v("create table tab using super_table tags (column_value,column_value……)；")]),e._v(" "),_("p",[_("strong",[e._v("删除表")]),e._v("\ndrop table if exists mytable;")]),e._v(" "),_("p",[_("strong",[e._v("显示当前数据库下的所有数据表信息  tables非表名，而是固定写法")]),e._v("\nshow tables;")]),e._v(" "),_("p",[_("strong",[e._v("显示当前数据库下的所有数据表信息")]),e._v('\nshow tables like "%table_name%";')]),e._v(" "),_("p",[_("strong",[e._v("获取表的结构信息")]),e._v("\ndescribe mytable;")]),e._v(" "),_("p",[_("strong",[e._v("表增加列")]),e._v("\nalter table mytable add column addfield int;")]),e._v(" "),_("p",[_("strong",[e._v("表删除列")]),e._v("\nalter table mytable drop column addfield;")]),e._v(" "),_("h2",{attrs:{id:"超级表操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#超级表操作"}},[e._v("#")]),e._v(" 超级表操作")]),e._v(" "),_("p",[_("strong",[e._v("创建STable, 与创建表的SQL语法相似，但需指定TAGS字段的名称和类型。说明：")])]),e._v(" "),_("ol",[_("li",[e._v("TAGS 列的数据类型不能是timestamp类型；\n2.TAGS 列名不能与其他列名相同；")]),e._v(" "),_("li",[e._v("TAGS 列名不能为预留关键字；\n4.TAGS 最多允许128个，可以0个，总长度不超过16k个字符")])]),e._v(" "),_("p",[e._v("create table if not exists mysupertable (ts timestamp, field1 int，……) tags (tag1 nchar(50), tag2 nchar(100)，……);")]),e._v(" "),_("p",[_("strong",[e._v("删除超级表")]),e._v("\ndrop table if exists super_table ;")]),e._v(" "),_("p",[_("strong",[e._v("显示当前数据库下的所有超级表信息 show stables")]),e._v('\nshow stables like "%super%";')]),e._v(" "),_("p",[_("strong",[e._v("获取超级表的结构信息")]),e._v("\ndescribe super_table ;")]),e._v(" "),_("p",[_("strong",[e._v("超级表增加列")]),e._v("\nalter table super_table add column column_name int;")]),e._v(" "),_("p",[_("strong",[e._v("超级表删除列")]),e._v("\nalter table super_table drop column column_name;")]),e._v(" "),_("p",[_("strong",[e._v("添加标签")]),e._v("\nalter table super_table add tag column nchar(60);")]),e._v(" "),_("p",[_("strong",[e._v("删除标签")]),e._v("\nalter table super_table drop tag tag_name;")]),e._v(" "),_("p",[_("strong",[e._v("修改标签名")]),e._v("\nalter table super_table change tag old_tag_name  new_tag_name;")]),e._v(" "),_("p",[_("strong",[e._v("修改子表标签值(TAG)")]),e._v('\nalter table item_table_name set tag column_key = "value";')]),e._v(" "),_("h2",{attrs:{id:"系统文件路径"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#系统文件路径"}},[e._v("#")]),e._v(" 系统文件路径")]),e._v(" "),_("p",[e._v("/etc/taos/taos.cfg ：  配置文件")]),e._v(" "),_("p",[e._v("/var/lib/taos ： 数据文件目录，包括数据文件及数据节点、虚拟节点、管理节点等信息")]),e._v(" "),_("p",[e._v("/var/log/taos ： 日志文件")]),e._v(" "),_("p",[e._v("/usr/local/taos/bin ： 脚本文件")]),e._v(" "),_("p",[e._v("/usr/local/taos/driver ： 动态链接库 windows下安装客户端后为 C:\\TDengine\\driver")]),e._v(" "),_("h2",{attrs:{id:"常见异常-错误信息"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常见异常-错误信息"}},[e._v("#")]),e._v(" 常见异常/错误信息")]),e._v(" "),_("p",[e._v("Out of DNodes : 创建数据库时指定了replica 的设置,但TDengine的服务端是单机版，因此一个数据节点的情况下无法创建出多个虚拟节点(Vnode)。")]),e._v(" "),_("p",[e._v("syntax error near xxx : 多数为语法错误或者某些关键字/函数不支持。")]),e._v(" "),_("p",[e._v("Unable to resolve FQDN: 是由于客户端或数据节点无法解析FQDN(Fully Qualified Domain Name)导致。检查windows本地的hosts文件是否配置FQDN的解析是否正确，可以ping和telnet看是否能通。")]),e._v(" "),_("p",[e._v("如果TDengine为集群，那么hosts中需要配置每个节点的解析。")]),e._v(" "),_("p",[e._v("如集群有三个节点td1,td2,td3, 则hosts中需要配置此三个节点 192.168.0.1  tdengine1    192.168.0.1  tdengine2   192.168.0.1  tdengine3")]),e._v(" "),_("p",[e._v("Unable to establish connection ： 出现频率较高的问题，多数时候为网络、端口的问题，官方给出了9个排查问题的方案，但几个方案也都是在排查网络和端口是否正常。")]),e._v(" "),_("p",[e._v("对于TDengine本身的安装而言，FQDN的设置需要保持几个地方的一致:")]),e._v(" "),_("ol",[_("li",[_("p",[e._v("服务器的host配置，一般为etc下的hostname和host")])]),e._v(" "),_("li",[_("p",[e._v("TDengine安装数据目录下的json，安装目录默认为 /var/lib/taos/dnode 其中某些json中的fqdn配置要和host文件中的fqdn地址一样")])])]),e._v(" "),_("p",[e._v("保证fqdn配置完全没问题后再进行端口等问题的排查")]),e._v(" "),_("h2",{attrs:{id:"ps"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#ps"}},[e._v("#")]),e._v(" PS")]),e._v(" "),_("p",[e._v("服务器和客户端安装时版本需要对应，如服务端是2.0.1.1，客户端也需要2.0.1.1。")]),e._v(" "),_("p",[e._v("数据都有保存时间，创建数据库时可通过keep设定数据保留时间，不设定默认3650天，一旦超过保存时间，数据将被系统自动删除。")]),e._v(" "),_("p",[e._v("数据备份时间days可在创建库时指定，默认10天，也就是说每隔十天将会进行一次数据备份，以文件形式保存。")]),e._v(" "),_("p",[e._v("TDengine对SQL语句中的英文字符不区分大小写，自动转化为小写执行。因此用户大小写敏感的字符串及密码，需要使用单引号将字符串引起来。\n子表的Tag值在建表时已设定，insert操作时不用写入tag")]),e._v(" "),_("p",[e._v("SQL语句默认长度65480个字符(64KB)，但可通过系统配置参数maxSQLLength修改，最长可配置为1M")]),e._v(" "),_("p",[e._v("根据实际测试，默认sql长度下, ts+11个物理量(采集的字段)，一般数据量下Mybatis做批量插入时一次最多300+大小size的list插入数据库，ts+6个物理量的最多500+")])])}),[],!1,null,null,null);t.default=s.exports}}]);