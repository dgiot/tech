(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{867:function(t,v,e){"use strict";e.r(v);var _=e(7),o=Object(_.a)({},(function(){var t=this,v=t.$createElement,e=t._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"mqtt-客户端库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mqtt-客户端库"}},[t._v("#")]),t._v(" MQTT 客户端库")]),t._v(" "),e("p",[t._v("本页选取各个编程语言中热门 MQTT 客户端库进行介绍说明，提供连接、发布、订阅、取消订阅基本功能代码示例。")]),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/zh/backend/emqx/development/c.html"}},[t._v("MQTT C 客户端库")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/zh/backend/emqx/development/java.html"}},[t._v("MQTT Java 客户端库")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/zh/backend/emqx/development/go.html"}},[t._v("MQTT Go 客户端库")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/zh/backend/emqx/development/erlang.html"}},[t._v("MQTT Erlang 客户端库")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/zh/backend/emqx/development/javascript.html"}},[t._v("MQTT JavaScript 客户端库")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/zh/backend/emqx/development/python.html"}},[t._v("MQTT Python 客户端库")])],1)]),t._v(" "),e("p",[t._v("MQTT 社区收录了完整的 MQTT 客户端库列表，本章节对热门的每个库都提供连接样例、支持度分析，你可以"),e("a",{attrs:{href:"https://github.com/mqtt/mqtt.github.io/wiki/libraries",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击此处"),e("OutboundLink")],1),t._v("查看。")]),t._v(" "),e("h2",{attrs:{id:"mqtt-客户端生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mqtt-客户端生命周期"}},[t._v("#")]),t._v(" MQTT 客户端生命周期")]),t._v(" "),e("p",[t._v("MQTT 客户端整个生命周期的行为可以概括为：建立连接、订阅主题、接收消息并处理、向指定主题发布消息、取消订阅、断开连接。")]),t._v(" "),e("p",[t._v("标准的客户端库在每个环节都暴露出相应的方法，不同库在相同环节所需方法参数含义大致相同，具体选用哪些参数、启用哪些功能特性需要用户深入了解 MQTT 协议特性并结合实际应用场景而定。")]),t._v(" "),e("p",[t._v("以一个客户端连接并发布、处理消息为例，每个环节大致需要进行的步骤：")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("建立连接")]),t._v("：")]),t._v(" "),e("ul",[e("li",[t._v("指定 MQTT Broker 基本信息接入地址与端口")]),t._v(" "),e("li",[t._v("指定传输类型是 TCP 还是 MQTT over WebSocket")]),t._v(" "),e("li",[t._v("如果启用 TLS 需要选择协议版本并携带相应的的证书")]),t._v(" "),e("li",[t._v("Broker 启用了认证鉴权则客户端需要携带相应的 MQTT Username Password 信息")]),t._v(" "),e("li",[t._v("配置客户端参数如 keepalive 时长、clean session 回话保留标志位、MQTT 协议版本、遗嘱消息（LWT）等")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("订阅主题")]),t._v("：连接建立成功后可以订阅主题，需要指定主题信息")]),t._v(" "),e("ul",[e("li",[t._v("指定主题过滤器 Topic，订阅的时候支持主题通配符 "),e("code",[t._v("+")]),t._v(" 与 "),e("code",[t._v("#")]),t._v(" 的使用")]),t._v(" "),e("li",[t._v("指定 QoS，根据客户端库和 Broker 的实现可选  Qos 0 1 2，注意部分 Broker 与云服务提供商不支持部分 QoS 级别，如 AWS IoT 、阿里云 IoT 套件、Azure IoT Hub 均不支持 QoS 2 级别消息")]),t._v(" "),e("li",[t._v("订阅主题可能因为网络问题、Broker 端 ACL 规则限制而失败")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("接收消息并处理")]),t._v("：")]),t._v(" "),e("ul",[e("li",[t._v("一般是在连接时指定处理函数，依据客户端库与平台的网络编程模型不同此部分处理方式略有不同")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("发布消息")]),t._v("：向指定主题发布消息")]),t._v(" "),e("ul",[e("li",[t._v("指定目标主题，注意该主题不能包含通配符 "),e("code",[t._v("+")]),t._v(" 或 "),e("code",[t._v("#")]),t._v("，若主题中包含通配符可能会导致消息发布失败、客户端断开等情况（视 Broker 与客户端库实现方式）")]),t._v(" "),e("li",[t._v("指定消息 QoS 级别，同样存在不同 Broker 与平台支持的 QoS 级别不同，如 Azure IoT Hub 发布 QoS 2 的消息将断开客户端连接")]),t._v(" "),e("li",[t._v("指定消息体内容，消息体内容大小不能超出 Broker 设置最大消息大小")]),t._v(" "),e("li",[t._v("指定消息 Retain 保留消息标志位")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("取消订阅")]),t._v("：")]),t._v(" "),e("ul",[e("li",[t._v("指定目标主题即可")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("断开连接")]),t._v("：")]),t._v(" "),e("ul",[e("li",[t._v("客户端主动断开连接，服务器端将发布遗嘱消息（LWT）")])])])])])}),[],!1,null,null,null);v.default=o.exports}}]);