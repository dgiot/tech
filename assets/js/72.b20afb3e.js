(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{637:function(e,t,a){"use strict";a.r(t);var s=a(9),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"多语言-钩子扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多语言-钩子扩展"}},[e._v("#")]),e._v(" 多语言 - 钩子扩展")]),e._v(" "),a("p",[e._v("多语言的 "),a("strong",[e._v("钩子扩展")]),e._v(" 由 "),a("a",{attrs:{href:"https://github.com/emqx/emqx-extension-hook",target:"_blank",rel:"noopener noreferrer"}},[e._v("emqx-extension-hook"),a("OutboundLink")],1),e._v(" 插件进行支持。该插件在 4.1.0 中首次引入。它允许用户使用其它编程语言处理 EMQ X 的 "),a("RouterLink",{attrs:{to:"/zh/backend/emqx/advanced/hooks.html"}},[e._v("钩子(Hooks)")]),e._v("。例如：")],1),e._v(" "),a("ul",[a("li",[e._v("校验某客户端的登录权限。")]),e._v(" "),a("li",[e._v("校验某客户端 PUB/SUB 的操作权限。")]),e._v(" "),a("li",[e._v("处理消息类事件，并消息桥接、转发或存储到其它的系统。")])]),e._v(" "),a("p",[e._v("注：消息类钩子仅在企业版中支持。\n注：4.1 到 4.2 版本中仅实现 Python, Java 的支持。")]),e._v(" "),a("h2",{attrs:{id:"设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计"}},[e._v("#")]),e._v(" 设计")]),e._v(" "),a("p",[e._v("EMQ X 发行包中不包含其它语言运行时环境的支持。它通过 EMQ X 提供的该语言的 驱动(Drivers) 进行通信和过程调用(Remote Process Call).")]),e._v(" "),a("p",[a("code",[e._v("emqx-extension-hook")]),e._v(" 通过过程调用将 EMQ X 中的钩子事件，直接触发到某语言某个具体的函数，并得到其函数的返回值，作为事件的处理结果。")]),e._v(" "),a("p",[e._v("如下图所示：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" EMQ X                                      Third-party Runtimes\n+========================+                 +====================+ \n|    Extension           |                 |                    |\n|   +----------------+   |     Hooks       |  Python scripts /  |\n|   |    Drivers     | ------------------\x3e |  Java Classes   /  |\n|   +----------------+   |     (pipe)      |  Others ...        |\n|                        |                 |                    |\n+========================+                 +====================+\n\n")])])]),a("p",[e._v("因此，它要求：")]),e._v(" "),a("ul",[a("li",[e._v("EMQ X 的宿主机，具备某语言的运行时环境，并已经配置到系统的环境变量中。")]),e._v(" "),a("li",[e._v("必须将脚本（或编译后的代码）、资源文件等，放到 emqx-extension-hook 指示的路径。")]),e._v(" "),a("li",[e._v("用户代码的实现，若包含三方依赖、库等，它应该包含在 emqx-extension-hook 对其的搜索路径中。")])]),e._v(" "),a("h3",{attrs:{id:"驱动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#驱动"}},[e._v("#")]),e._v(" 驱动")]),e._v(" "),a("p",[e._v("驱动(Drivers) 实现了 Erlang 和 其它语言（例如：Python, Java）间的过程调用和通信。它基于 "),a("a",{attrs:{href:"http://erlang.org/doc/tutorial/c_port.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Erlang - Port"),a("OutboundLink")],1),e._v(" 进行实现。")]),e._v(" "),a("p",[e._v("例如：Java 语言驱动的实现包括两部分的内容：")]),e._v(" "),a("ul",[a("li",[e._v("Erlang 侧的实现，它包含如何启动其他语言的运行时系统、和分发请求、处理结果等。")]),e._v(" "),a("li",[e._v("Java 侧的实现，它包含如何和 Erlang 虚拟机通信，如何分发函数调用等。")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" Erlang VM                       Third Runtimes (e.g: Java VM)\n+===========+=========+         +=========+================+\n| Extension | Driver  | <=====> |  Driver | User's Codes   |\n+===========+=========+         +=========+================+\n")])])]),a("h3",{attrs:{id:"sdk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sdk"}},[e._v("#")]),e._v(" SDK")]),e._v(" "),a("p",[e._v("为了方便用户的开发，我们对每类的语言都提供了对应的 SDK 支持。")]),e._v(" "),a("p",[e._v("对于用户开发自己的代码来说，SDK 并不是必须的，但它封装底层的比较晦涩的数据格式和方法，屏蔽底层细节。直接提供了更为优好的 API 和数据类型供用户使用。")]),e._v(" "),a("p",[e._v("从依赖的层级关系来说：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("+---------------------+\n|     User's Codes    |\n+---------------------+\n|         SDK         |  <====  The SDK Located\n+---------------------+\n|       Raw APIs      |\n+---------------------+\n|        Driver       |\n+=====================+\n           ||\n+=====================+\n|        Erlang       |\n+---------------------+\n")])])]),a("p",[e._v("对于 EMQ X 来说，"),a("code",[e._v("Raw APIs")]),e._v(" 及往下的部分都属于 "),a("code",[e._v("emqx-extension-hook")]),e._v(" 插件所包含的内容，并已包含在 EMQ X 的发行包中；往上的 "),a("code",[e._v("SDK")]),e._v(" 和 "),a("code",[e._v("Users's Codes")]),e._v(" 都属于用户使用的编程语言，需要额外部署到 EMQ X 的代码和资源。")]),e._v(" "),a("p",[a("code",[e._v("Raw APIs")]),e._v(" 可参考 "),a("a",{attrs:{href:"https://github.com/emqx/emqx-extension-hook/tree/master/test/scripts",target:"_blank",rel:"noopener noreferrer"}},[e._v("emqx-extension-hook - examples"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("目前对于 "),a("code",[e._v("emqx-extension-hook")]),e._v(" 提供的 SDK 有：")]),e._v(" "),a("ul",[a("li",[e._v("Python: https://github.com/emqx/emqx-extension-python-sdk")]),e._v(" "),a("li",[e._v("Java: https://github.com/emqx/emqx-extension-java-sdk")])]),e._v(" "),a("p",[e._v("注：SDK 版本与 EMQ X 的第二位版本号进行兼容。例如，在 EMQ X v4.1.4 中，应该使用 v4.1.x 的 SDK")]),e._v(" "),a("h2",{attrs:{id:"快速上手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快速上手"}},[e._v("#")]),e._v(" 快速上手")]),e._v(" "),a("h3",{attrs:{id:"python"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python"}},[e._v("#")]),e._v(" Python")]),e._v(" "),a("p",[e._v("参考：https://www.emqx.cn/blog/develop-emqx-plugin-using-python")]),e._v(" "),a("h3",{attrs:{id:"java"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java"}},[e._v("#")]),e._v(" Java")]),e._v(" "),a("p",[e._v("参考：https://www.emqx.cn/blog/develop-emqx-plugin-using-java")])])}),[],!1,null,null,null);t.default=n.exports}}]);