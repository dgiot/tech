(window.webpackJsonp=window.webpackJsonp||[]).push([[298],{506:function(t,s,a){"use strict";a.r(s);var e=a(9),v=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"规则引擎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规则引擎"}},[t._v("#")]),t._v(" 规则引擎")]),t._v(" "),a("p",[t._v('EMQ X Rule Engine (以下简称规则引擎) 用于配置 EMQ X 消息流与设备事件的处理、响应规则。规则引擎不仅提供了清晰、灵活的 "配置式" 的业务集成方案，简化了业务开发流程，提升用户易用性，降低业务系统与 EMQ X 的耦合度；也为 EMQ X 的私有功能定制提供了一个更优秀的基础架构。')]),t._v(" "),a("p",[a("img",{attrs:{src:"http://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/backend/emqx/assets/image-20190506171815028.jpg",alt:"image-20190506171815028.jpg"}})]),t._v(" "),a("p",[t._v("EMQ X 在 "),a("strong",[t._v("消息发布或事件触发")]),t._v(" 时将触发规则引擎，满足触发条件的规则将执行各自的 SQL 语句筛选并处理消息和事件的上下文信息。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("适用版本: "),a("strong",[t._v("EMQ X v3.1.0+")])]),t._v(" "),a("p",[t._v("兼容提示: EMQ X v4.0 对规则引擎 SQL 语法做出较大调整，v3.x 升级用户请参照 "),a("RouterLink",{attrs:{to:"/zh/product/dgiot/device_cloud/rules/rule-engine.html#迁移指南"}},[t._v("迁移指南")]),t._v(" 进行适配。")],1)]),t._v(" "),a("h2",{attrs:{id:"emq-x-规则引擎快速入门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#emq-x-规则引擎快速入门"}},[t._v("#")]),t._v(" EMQ X 规则引擎快速入门")]),t._v(" "),a("p",[t._v("此处包含规则引擎的简介与实战，演示使用规则引擎结合华为云 RDS 上的 MySQL 服务，进行物联网 MQTT 设备在线状态记录、消息存储入库。")]),t._v(" "),a("p",[t._v("从本视频中可以快速了解规则引擎解决的问题和基础使用方法。")]),t._v(" "),a("iframe",{staticStyle:{width:"500px",height:"360px",margin:"10px auto"},attrs:{src:"//player.bilibili.com/player.html?aid=927036281&bvid=BV19T4y1w7Nj&cid=233977851&page=1",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"true"}}),t._v(" "),a("h2",{attrs:{id:"消息发布"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息发布"}},[t._v("#")]),t._v(" 消息发布")]),t._v(" "),a("p",[t._v("规则引擎借助响应动作可将特定主题的消息处理结果存储到数据库，发送到 HTTP Server，转发到消息队列 Kafka 或 RabbitMQ，重新发布到新的主题甚至是另一个 Broker 集群中，每个规则可以配置多个响应动作。")]),t._v(" "),a("p",[t._v("选择发布到 t/# 主题的消息，并筛选出全部字段：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t/#"')]),t._v("\n")])])]),a("p",[t._v('选择发布到 t/a 主题的消息，并从 JSON 格式的消息内容中筛选出 "x" 字段：')]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t/a"')]),t._v("\n")])])]),a("h2",{attrs:{id:"事件触发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件触发"}},[t._v("#")]),t._v(" 事件触发")]),t._v(" "),a("p",[t._v("规则引擎使用 "),a("strong",[t._v("$events/")]),t._v(" 开头的虚拟主题（"),a("strong",[t._v("事件主题")]),t._v("）处理 EMQ X 内置事件，内置事件提供更精细的消息控制和客户端动作处理能力，可用在 QoS 1 QoS 2 的消息抵达记录、设备上下线记录等业务中。")]),t._v(" "),a("p",[t._v("选择客户端连接事件，筛选 Username 为 'emqx' 的设备并获取连接信息：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" clientid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" connected_at "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$events/client_connected"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" username "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'emqx'")]),t._v("\n")])])]),a("p",[t._v("规则引擎数据和 SQL 语句格式，"),a("a",{attrs:{href:"#event-topics"}},[t._v("事件主题")]),t._v(" 列表详细教程参见 "),a("a",{attrs:{href:"#rule-sql"}},[t._v("SQL 手册")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"最小规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最小规则"}},[t._v("#")]),t._v(" 最小规则")]),t._v(" "),a("p",[t._v("规则描述了 "),a("strong",[t._v("数据从哪里来")]),t._v("、"),a("strong",[t._v("如何筛选并处理数据")]),t._v("、"),a("strong",[t._v("处理结果到哪里去")]),t._v(" 三个配置，即一条可用的规则包含三个要素：")]),t._v(" "),a("ul",[a("li",[t._v("触发事件：规则通过事件触发，触发时事件给规则注入事件的上下文信息（数据源），通过 SQL 的 FROM 子句指定事件类型；")]),t._v(" "),a("li",[t._v("处理规则（SQL）：使用 SELECT 子句 和 WHERE 子句以及内置处理函数， 从上下文信息中过滤和处理数据；")]),t._v(" "),a("li",[t._v("响应动作：如果有处理结果输出，规则将执行相应的动作，如持久化到数据库、重新发布处理后的消息、转发消息到消息队列等。一条规则可以配置多个响应动作。")])]),t._v(" "),a("p",[t._v("如图所示是一条简单的规则，该条规则用于处理 "),a("strong",[t._v("消息发布")]),t._v(" 时的数据，将全部主题消息的 "),a("code",[t._v("msg")]),t._v(" 字段，消息 "),a("code",[t._v("topic")]),t._v(" 、"),a("code",[t._v("qos")]),t._v(" 筛选出来，发送到 Web Server 与 /uplink 主题：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/backend/emqx/assets/image-20190604103907875.png",alt:"image-20190604103907875.png"}})]),t._v(" "),a("h2",{attrs:{id:"规则引擎典型应用场景举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规则引擎典型应用场景举例"}},[t._v("#")]),t._v(" 规则引擎典型应用场景举例")]),t._v(" "),a("ul",[a("li",[t._v("动作监听：智慧家庭智能门锁开发中，门锁会因为网络、电源故障、人为破坏等原因离线导致功能异常，使用规则引擎配置监听离线事件向应用服务推送该故障信息，可以在接入层实现第一时间的故障检测的能力；")]),t._v(" "),a("li",[t._v("数据筛选：车辆网的卡车车队管理，车辆传感器采集并上报了大量运行数据，应用平台仅关注车速大于 40 km/h 时的数据，此场景下可以使用规则引擎对消息进行条件过滤，向业务消息队列写入满足条件的数据；")]),t._v(" "),a("li",[t._v("消息路由：智能计费应用中，终端设备通过不同主题区分业务类型，可通过配置规则引擎将计费业务的消息接入计费消息队列并在消息抵达设备端后发送确认通知到业务系统，非计费信息接入其他消息队列，实现业务消息路由配置；")]),t._v(" "),a("li",[t._v("消息编解码：其他公共协议 / 私有 TCP 协议接入、工控行业等应用场景下，可以通过规则引擎的本地处理函数（可在 EMQ X 上定制开发）做二进制 / 特殊格式消息体的编解码工作；亦可通过规则引擎的消息路由将相关消息流向外部计算资源如函数计算进行处理（可由用户自行开发处理逻辑），将消息转为业务易于处理的 JSON 格式，简化项目集成难度、提升应用快速开发交付能力。")])]),t._v(" "),a("h2",{attrs:{id:"迁移指南"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#迁移指南"}},[t._v("#")]),t._v(" 迁移指南")]),t._v(" "),a("p",[t._v("4.0 版本中规则引擎 SQL 语法更加易用，3.x 版本中所有事件 "),a("strong",[t._v("FROM")]),t._v(" 子句后面均需要指定事件名称，4.0 以后我们引入 "),a("strong",[t._v("事件主题")]),t._v(" 概念，默认情况下 "),a("strong",[t._v("消息发布")]),t._v(" 事件不再需要指定事件名称：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 3.x 版本")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 需要指定事件名称进行处理")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t/#"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" topic "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t/#'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 4.0 及以后版本")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 默认处理 message.publish 事件，FROM 后面直接填写 MQTT 主题")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 上述 SQL 语句等价于:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t/#'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 其他事件，FROM 后面填写事件主题")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$events/message_acked"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" topic "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t/#'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$events/client_connected"')]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("Dashboard 中提供了旧版 SQL 语法转换功能可以完成 SQL 升级迁移。")])]),t._v(" "),a("h2",{attrs:{id:"规则引擎组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规则引擎组成"}},[t._v("#")]),t._v(" 规则引擎组成")]),t._v(" "),a("p",[t._v("使用 EMQ X 的规则引擎可以灵活地处理消息和事件。使用规则引擎可以方便地实现诸如将消息转换成指定格式，然后存入数据库表，或者发送到消息队列等。")]),t._v(" "),a("p",[t._v("与 EMQ X 规则引擎相关的概念包括: 规则(rule)、动作(action)、资源(resource) 和 资源类型(resource-type)。")]),t._v(" "),a("p",[t._v("规则、动作、资源的关系:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("规则: {\n    SQL 语句,\n    动作列表: [\n        {\n            动作1,\n            动作参数,\n            绑定资源: {\n                资源配置\n            }\n        },\n        {\n            动作2,\n            动作参数,\n            绑定资源: {\n                资源配置\n            }\n         }\n    ]\n}\n")])])]),a("ul",[a("li",[t._v("规则(Rule): 规则由 SQL 语句和动作列表组成。动作列表包含一个或多个动作及其参数。")]),t._v(" "),a("li",[t._v("SQL 语句用于筛选或转换消息中的数据。")]),t._v(" "),a("li",[t._v("动作(Action) 是 SQL 语句匹配通过之后，所执行的任务。动作定义了一个针对数据的操作。\n动作可以绑定资源，也可以不绑定。例如，“inspect” 动作不需要绑定资源，它只是简单打印数据内容和动作参数。而 “data_to_webserver” 动作需要绑定一个 web_hook 类型的资源，此资源中配置了 URL。")]),t._v(" "),a("li",[t._v("资源(Resource): 资源是通过资源类型为模板实例化出来的对象，保存了与资源相关的配置(比如数据库连接地址和端口、用户名和密码等) 和系统资源(如文件句柄，连接套接字等)。")]),t._v(" "),a("li",[t._v("资源类型 (Resource Type): 资源类型是资源的静态定义，描述了此类型资源需要的配置项。")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("动作和资源类型是由 emqx 或插件的代码提供的，不能通过 API 和 CLI 动态创建。")])]),t._v(" "),a("h2",{attrs:{id:"sql-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-语句"}},[t._v("#")]),t._v(" SQL 语句")]),t._v(" "),a("h3",{attrs:{id:"sql-语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-语法"}},[t._v("#")]),t._v(" SQL 语法")]),t._v(" "),a("p",[a("strong",[t._v("FROM、SELECT 和 WHERE 子句:")])]),t._v(" "),a("p",[t._v("规则引擎的 SQL 语句基本格式为:")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("字段名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("主题"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("条件"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("FROM")]),t._v(" 子句将规则挂载到某个主题上")]),t._v(" "),a("li",[a("code",[t._v("SELECT")]),t._v(" 子句用于对数据进行变换，并选择出感兴趣的字段")]),t._v(" "),a("li",[a("code",[t._v("WHERE")]),t._v(" 子句用于对 SELECT 选择出来的某个字段施加条件过滤")])]),t._v(" "),a("p",[a("strong",[t._v("FOREACH、DO 和 INCASE 子句:")])]),t._v(" "),a("p",[t._v("如果对于一个数组数据，想针对数组中的每个元素分别执行一些操作并执行 Actions，需要使用 "),a("code",[t._v("FOREACH-DO-INCASE")]),t._v(" 语法。其基本格式为:")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("FOREACH "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("字段名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("条件"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("INCASE "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("条件"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("主题"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("条件"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("FOREACH")]),t._v(" 子句用于选择需要做 foreach 操作的字段，注意选择出的字段必须为数组类型")]),t._v(" "),a("li",[a("code",[t._v("DO")]),t._v(" 子句用于对 FOREACH 选择出来的数组中的每个元素进行变换，并选择出感兴趣的字段")]),t._v(" "),a("li",[a("code",[t._v("INCASE")]),t._v(" 子句用于对 DO 选择出来的某个字段施加条件过滤")])]),t._v(" "),a("p",[t._v("其中 DO 和 INCASE 子句都是可选的。DO 相当于针对当前循环中对象的 SELECT 子句，而 INCASE 相当于针对当前循环中对象的 WHERE 语句。")]),t._v(" "),a("h3",{attrs:{id:"事件和事件主题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件和事件主题"}},[t._v("#")]),t._v(" 事件和事件主题")]),t._v(" "),a("p",[t._v("规则引擎的 SQL 语句既可以处理消息(消息发布)，也可以处理事件(客户端上下线、客户端订阅等)。对于消息，FROM 子句后面直接跟主题名；对于事件，FROM 子句后面跟事件主题。")]),t._v(" "),a("p",[t._v("事件消息的主题以 "),a("code",[t._v('"$events/"')]),t._v(" 开头，比如 "),a("code",[t._v('"$events/client_connected",')]),t._v(" "),a("code",[t._v('"$events/session_subscribed"。')]),t._v("\n如果想让 emqx 将事件消息发布出来，可以在 "),a("code",[t._v("emqx_rule_engine.conf")]),t._v(" 文件中配置。")]),t._v(" "),a("p",[t._v("所有支持的事件及其可用字段详见: "),a("a",{attrs:{href:"#rule-sql-events"}},[t._v("规则事件")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"sql-语句示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-语句示例"}},[t._v("#")]),t._v(" SQL 语句示例:")]),t._v(" "),a("h4",{attrs:{id:"基本语法举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本语法举例"}},[t._v("#")]),t._v(" 基本语法举例")]),t._v(" "),a("ul",[a("li",[t._v('从 topic 为 "t/a" 的消息中提取所有字段:')])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t/a"')]),t._v("\n")])])]),a("ul",[a("li",[t._v('从 topic 为 "t/a" 或 "t/b" 的消息中提取所有字段:')])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t/a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t/b"')]),t._v("\n")])])]),a("ul",[a("li",[t._v("从 topic 能够匹配到 't/#' 的消息中提取所有字段。")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t/#"')]),t._v("\n")])])]),a("ul",[a("li",[t._v("从 topic 能够匹配到 't/#' 的消息中提取 qos, username 和 clientid 字段:")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" qos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" clientid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t/#"')]),t._v("\n")])])]),a("ul",[a("li",[t._v("从任意 topic 的消息中提取 username 字段，并且筛选条件为 username = 'Steven':")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" username "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" username"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Steven'")]),t._v("\n")])])]),a("ul",[a("li",[t._v('从任意 topic 的 JSON 消息体(payload) 中提取 x 字段，并创建别名 x 以便在 WHERE 子句中使用。WHERE 子句限定条件为 x = 1。下面这个 SQL 语句可以匹配到消息体 {"x": 1}, 但不能匹配到消息体 {"x": 2}:')])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" payload "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" p "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),a("ul",[a("li",[t._v('类似于上面的 SQL 语句，但嵌套地提取消息体中的数据，下面的 SQL 语句可以匹配到 JSON 消息体 {"x": {"y": 1}}:')])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" payload "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),a("ul",[a("li",[t._v("在 clientid = 'c1' 尝试连接时，提取其来源 IP 地址和端口号:")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" peername "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" ip_port "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$events/client_connected"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" clientid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c1'")]),t._v("\n")])])]),a("ul",[a("li",[t._v("筛选所有订阅 't/#' 主题且订阅级别为 QoS1 的 clientid:")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" clientid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$events/session_subscribed"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" topic "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t/#'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" qos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),a("ul",[a("li",[t._v("筛选所有订阅主题能匹配到 't/#' 且订阅级别为 QoS1 的 clientid。注意与上例不同的是，这里用的是主题匹配操作符 "),a("strong",[t._v("'=~'")]),t._v("，所以会匹配订阅 't' 或 't/+/a' 的订阅事件:")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" clientid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$events/session_subscribed"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" topic "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t/#'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" qos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("ul",[a("li",[t._v("FROM 子句后面的主题需要用双引号 "),a("code",[t._v('""')]),t._v(" 引起来。")]),t._v(" "),a("li",[t._v("WHERE 子句后面接筛选条件，如果使用到字符串需要用单引号 "),a("code",[t._v("''")]),t._v(" 引起来。")]),t._v(" "),a("li",[t._v("FROM 子句里如有多个主题，需要用逗号 "),a("code",[t._v('","')]),t._v(' 分隔。例如 SELECT * FROM "t/1", "t/2" 。')]),t._v(" "),a("li",[t._v("可以使用使用 "),a("code",[t._v('"."')]),t._v(" 符号对 payload 进行嵌套选择。")])])]),t._v(" "),a("h4",{attrs:{id:"遍历语法-foreach-do-incase-举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#遍历语法-foreach-do-incase-举例"}},[t._v("#")]),t._v(" 遍历语法(FOREACH-DO-INCASE) 举例")]),t._v(" "),a("p",[t._v("假设有 ClientID 为 "),a("code",[t._v("c_steve")]),t._v("、主题为 "),a("code",[t._v("t/1")]),t._v(" 的消息，消息体为 JSON 格式，其中 sensors 字段为包含多个 Object 的数组:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"date"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-04-24"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sensors"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"idx"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"idx"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"idx"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("示例1: 要求将 sensors 里的各个对象，分别作为数据输入重新发布消息到 "),a("code",[t._v("sensors/${idx}")]),t._v(" 主题，内容为 "),a("code",[t._v("${name}")]),t._v("。即最终规则引擎将会发出 3 条消息:")])]),t._v(" "),a("ol",[a("li",[t._v("主题：sensors/0\n内容：a")]),t._v(" "),a("li",[t._v("主题：sensors/1\n内容：b")]),t._v(" "),a("li",[t._v("主题：sensors/2\n内容：c")])]),t._v(" "),a("p",[t._v("要完成这个规则，我们需要配置如下动作：")]),t._v(" "),a("ul",[a("li",[t._v("动作类型：消息重新发布 (republish)")]),t._v(" "),a("li",[t._v("目的主题：sensors/${idx}")]),t._v(" "),a("li",[t._v("目的 QoS：0")]),t._v(" "),a("li",[t._v("消息内容模板：${name}")])]),t._v(" "),a("p",[t._v("以及如下 SQL 语句：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("FOREACH\n    payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sensors\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t/#"')]),t._v("\n")])])]),a("p",[a("strong",[t._v("示例解析:")])]),t._v(" "),a("p",[t._v("这个 SQL 中，FOREACH 子句指定需要进行遍历的数组 sensors，则选取结果为:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"idx"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"idx"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"idx"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v('FOREACH 语句将会对于结果数组里的每个对象分别执行 "消息重新发布" 动作，所以将会执行重新发布动作 3 次。')]),t._v(" "),a("p",[a("strong",[t._v("示例2: 要求将 sensors 里的 "),a("code",[t._v("idx")]),t._v(" 值大于或等于 1 的对象，分别作为数据输入重新发布消息到 "),a("code",[t._v("sensors/${idx}")]),t._v(" 主题，内容为 "),a("code",[t._v("clientid=${clientid},name=${name},date=${date}")]),t._v("。即最终规则引擎将会发出 2 条消息:")])]),t._v(" "),a("ol",[a("li",[t._v("主题：sensors/1\n内容：clientid=c_steve,name=b,date=2020-04-24")]),t._v(" "),a("li",[t._v("主题：sensors/2\n内容：clientid=c_steve,name=c,date=2020-04-24")])]),t._v(" "),a("p",[t._v("要完成这个规则，我们需要配置如下动作：")]),t._v(" "),a("ul",[a("li",[t._v("动作类型：消息重新发布 (republish)")]),t._v(" "),a("li",[t._v("目的主题：sensors/${idx}")]),t._v(" "),a("li",[t._v("目的 QoS：0")]),t._v(" "),a("li",[t._v("消息内容模板：clientid=${clientid},name=${name},date=${date}")])]),t._v(" "),a("p",[t._v("以及如下 SQL 语句：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("FOREACH\n    payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sensors\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DO")]),t._v("\n    clientid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("idx "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" idx\nINCASE\n    item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("idx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t/#"')]),t._v("\n")])])]),a("p",[a("strong",[t._v("示例解析:")])]),t._v(" "),a("p",[t._v("这个 SQL 中，FOREACH 子句指定需要进行遍历的数组 "),a("code",[t._v("sensors")]),t._v("; DO 子句选取每次操作需要的字段，这里我们选了外层的 "),a("code",[t._v("clientid")]),t._v(" 字段，以及当前 sensor 对象的 "),a("code",[t._v("name")]),t._v(" 和 "),a("code",[t._v("idx")]),t._v(" 两个字段，注意 "),a("code",[t._v("item")]),t._v(" 代表 sensors 数组中本次循环的对象。INCASE 子句是针对 DO 语句中字段的筛选条件，仅仅当 idx >= 1 满足条件。所以 SQL 的选取结果为:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"idx"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"clientid"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c_emqx"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"idx"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"clientid"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c_emqx"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v('FOREACH 语句将会对于结果数组里的每个对象分别执行 "消息重新发布" 动作，所以将会执行重新发布动作 2 次。')]),t._v(" "),a("p",[t._v("在 DO 和 INCASE 语句里，可以使用 "),a("code",[t._v("item")]),t._v(" 访问当前循环的对象，也可以通过在 FOREACH 使用 "),a("code",[t._v("as")]),t._v(" 语法自定义一个变量名。所以本例中的 SQL 语句又可以写为：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("FOREACH\n    payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sensors "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" s\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DO")]),t._v("\n    clientid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("idx "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" idx\nINCASE\n    s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("idx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t/#"')]),t._v("\n")])])]),a("p",[a("strong",[t._v("示例3: 在示例2 的基础上，去掉 clientid 字段 "),a("code",[t._v("c_steve")]),t._v(" 中的 "),a("code",[t._v("c_")]),t._v(" 前缀")])]),t._v(" "),a("p",[t._v("在 FOREACH 和 DO 语句中可以调用各类 SQL 函数，若要将 "),a("code",[t._v("c_steve")]),t._v(" 变为 "),a("code",[t._v("steve")]),t._v("，则可以把例2 中的 SQL 改为：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("FOREACH\n    payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sensors "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" s\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DO")]),t._v("\n    nth"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tokens"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clientid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" clientid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("idx "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" idx\nINCASE\n    s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("idx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t/#"')]),t._v("\n")])])]),a("p",[t._v("另外，FOREACH 子句中也可以放多个表达式，只要最后一个表达式是指定要遍历的数组即可。比如我们将消息体改一下，sensors 外面多套一层 Object：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"date"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-04-24"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"data"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sensors"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"idx"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"idx"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"idx"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("则 FOREACH 中可以在决定要遍历的数组之前把 data 选取出来：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("FOREACH\n    payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sensors "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" s\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),a("h4",{attrs:{id:"case-when-语法示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#case-when-语法示例"}},[t._v("#")]),t._v(" CASE-WHEN 语法示例")]),t._v(" "),a("p",[a("strong",[t._v("示例1: 将消息中 x 字段的值范围限定在 0~7 之间。")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" x\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t/#"')]),t._v("\n")])])]),a("p",[t._v("假设消息为:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"x"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("则上面的 SQL 输出为:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"x"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"数组操作语法举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组操作语法举例"}},[t._v("#")]),t._v(" 数组操作语法举例")]),t._v(" "),a("p",[a("strong",[t._v("示例1: 创建一个数组，赋值给变量 a:")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" a\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t/#"')]),t._v("\n")])])]),a("p",[t._v("下标从 1 开始，上面的 SQL 输出为:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("示例2: 从数组中取出第 N 个元素。下标为负数时，表示从数组的右边取:")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" c\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t/#"')]),t._v("\n")])])]),a("p",[t._v("上面的 SQL 输出为:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"c"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("示例3: 从 JSON 格式的 payload 中嵌套的获取值:")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n  payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" id\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t/#"')]),t._v("\n")])])]),a("p",[t._v("假设消息为:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"data"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"steve"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bill"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("则上面的 SQL 输出为:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("示例4: 数组范围(range)操作:")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" b\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t/#"')]),t._v("\n")])])]),a("p",[t._v("上面的 SQL 输出为:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("示例5: 使用下标语法修改数组中的某个元素:")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n  payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'STEVE'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t/#"')]),t._v("\n")])])]),a("p",[t._v("假设消息为:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"data"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"steve"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bill"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("则上面的 SQL 输出为:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"payload"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"data"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"STEVE"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bill"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"from-子句可用的事件主题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#from-子句可用的事件主题"}},[t._v("#")]),t._v(" FROM 子句可用的事件主题")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("事件主题名")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("释义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("$events/message_delivered")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("消息投递")])]),t._v(" "),a("tr",[a("td",[t._v("$events/message_acked")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("消息确认")])]),t._v(" "),a("tr",[a("td",[t._v("$events/message_dropped")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("消息丢弃")])]),t._v(" "),a("tr",[a("td",[t._v("$events/client_connected")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("连接完成")])]),t._v(" "),a("tr",[a("td",[t._v("$events/client_disconnected")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("连接断开")])]),t._v(" "),a("tr",[a("td",[t._v("$events/session_subscribed")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("订阅")])]),t._v(" "),a("tr",[a("td",[t._v("$events/session_unsubscribed")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("取消订阅")])])])]),t._v(" "),a("h3",{attrs:{id:"select-和-where-子句可用的字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#select-和-where-子句可用的字段"}},[t._v("#")]),t._v(" SELECT 和 WHERE 子句可用的字段")]),t._v(" "),a("p",[t._v("SELECT 和 WHERE 子句可用的字段与事件的类型相关。其中 "),a("code",[t._v("clientid")]),t._v(", "),a("code",[t._v("username")]),t._v(" 和 "),a("code",[t._v("event")]),t._v(" 是通用字段，每种事件类型都有。")]),t._v(" "),a("h4",{attrs:{id:"普通主题-消息发布"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#普通主题-消息发布"}},[t._v("#")]),t._v(" 普通主题 (消息发布)")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("event")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v('事件类型，固定为 "message.publish"')])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("id")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("MQTT 消息 ID")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("clientid")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Client ID")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("username")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("用户名")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("payload")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("MQTT 消息体")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("peerhost")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("客户端的 IPAddress")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("topic")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("MQTT 主题")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("qos")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("MQTT 消息的 QoS")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("flags")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("MQTT 消息的 Flags")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("headers")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("MQTT 消息内部与流程处理相关的额外数据")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("timestamp")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("事件触发时间 (ms)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("publish_received_at")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("PUBLISH 消息到达 Broker 的时间 (ms)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("node")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("事件触发所在节点")])])])]),t._v(" "),a("h4",{attrs:{id:"events-message-delivered-消息投递"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#events-message-delivered-消息投递"}},[t._v("#")]),t._v(" $events/message_delivered (消息投递)")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("event")]),t._v(" "),a("th",[t._v('事件类型，固定为 "message.delivered"')])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("id")]),t._v(" "),a("td",[t._v("MQTT 消息 ID")])]),t._v(" "),a("tr",[a("td",[t._v("from_clientid")]),t._v(" "),a("td",[t._v("消息来源 Client ID")])]),t._v(" "),a("tr",[a("td",[t._v("from_username")]),t._v(" "),a("td",[t._v("消息来源用户名")])]),t._v(" "),a("tr",[a("td",[t._v("clientid")]),t._v(" "),a("td",[t._v("消息目的 Client ID")])]),t._v(" "),a("tr",[a("td",[t._v("username")]),t._v(" "),a("td",[t._v("消息目的用户名")])]),t._v(" "),a("tr",[a("td",[t._v("payload")]),t._v(" "),a("td",[t._v("MQTT 消息体")])]),t._v(" "),a("tr",[a("td",[t._v("peerhost")]),t._v(" "),a("td",[t._v("客户端的 IPAddress")])]),t._v(" "),a("tr",[a("td",[t._v("topic")]),t._v(" "),a("td",[t._v("MQTT 主题")])]),t._v(" "),a("tr",[a("td",[t._v("qos")]),t._v(" "),a("td",[t._v("MQTT 消息的 QoS")])]),t._v(" "),a("tr",[a("td",[t._v("flags")]),t._v(" "),a("td",[t._v("MQTT 消息的 Flags")])]),t._v(" "),a("tr",[a("td",[t._v("timestamp")]),t._v(" "),a("td",[t._v("事件触发时间 (ms)")])]),t._v(" "),a("tr",[a("td",[t._v("publish_received_at")]),t._v(" "),a("td",[t._v("PUBLISH 消息到达 Broker 的时间 (ms)")])]),t._v(" "),a("tr",[a("td",[t._v("node")]),t._v(" "),a("td",[t._v("事件触发所在节点")])])])]),t._v(" "),a("h4",{attrs:{id:"events-message-acked-消息确认"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#events-message-acked-消息确认"}},[t._v("#")]),t._v(" $events/message_acked (消息确认)")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("event")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v('事件类型，固定为 "message.acked"')])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("id")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("MQTT 消息 ID")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("from_clientid")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("消息来源 Client ID")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("from_username")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("消息来源用户名")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("clientid")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("消息目的 Client ID")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("username")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("消息目的用户名")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("payload")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("MQTT 消息体")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("peerhost")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("客户端的 IPAddress")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("topic")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("MQTT 主题")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("qos")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("MQTT 消息的 QoS")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("flags")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("MQTT 消息的 Flags")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("timestamp")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("事件触发时间 (ms)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("publish_received_at")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("PUBLISH 消息到达 Broker 的时间 (ms)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("node")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("事件触发所在节点")])])])]),t._v(" "),a("h4",{attrs:{id:"events-message-dropped-消息丢弃"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#events-message-dropped-消息丢弃"}},[t._v("#")]),t._v(" $events/message_dropped (消息丢弃)")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("event")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v('事件类型，固定为 "message.dropped"')])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("id")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("MQTT 消息 ID")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("reason")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("消息丢弃原因")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("clientid")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("消息目的 Client ID")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("username")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("消息目的用户名")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("payload")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("MQTT 消息体")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("peerhost")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("客户端的 IPAddress")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("topic")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("MQTT 主题")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("qos")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("MQTT 消息的 QoS")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("flags")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("MQTT 消息的 Flags")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("timestamp")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("事件触发时间 (ms)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("publish_received_at")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("PUBLISH 消息到达 Broker 的时间 (ms)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("node")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("事件触发所在节点")])])])]),t._v(" "),a("h4",{attrs:{id:"events-client-connected-终端连接成功"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#events-client-connected-终端连接成功"}},[t._v("#")]),t._v(" $events/client_connected (终端连接成功)")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("event")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v('事件类型，固定为 "client.connected"')])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("clientid")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("消息目的 Client ID")])]),t._v(" "),a("tr",[a("td",[t._v("username")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("消息目的用户名")])]),t._v(" "),a("tr",[a("td",[t._v("mountpoint")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("主题挂载点(主题前缀)")])]),t._v(" "),a("tr",[a("td",[t._v("peername")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("终端的 IPAddress 和 Port")])]),t._v(" "),a("tr",[a("td",[t._v("sockname")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("emqx 监听的 IPAddress 和 Port")])]),t._v(" "),a("tr",[a("td",[t._v("proto_name")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("协议名字")])]),t._v(" "),a("tr",[a("td",[t._v("proto_ver")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("协议版本")])]),t._v(" "),a("tr",[a("td",[t._v("keepalive")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("MQTT 保活间隔")])]),t._v(" "),a("tr",[a("td",[t._v("clean_start")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("MQTT clean_start")])]),t._v(" "),a("tr",[a("td",[t._v("expiry_interval")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("MQTT Session 过期时间")])]),t._v(" "),a("tr",[a("td",[t._v("is_bridge")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("是否为 MQTT bridge 连接")])]),t._v(" "),a("tr",[a("td",[t._v("connected_at")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("终端连接完成时间 (s)")])]),t._v(" "),a("tr",[a("td",[t._v("timestamp")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("事件触发时间 (ms)")])]),t._v(" "),a("tr",[a("td",[t._v("node")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("事件触发所在节点")])])])]),t._v(" "),a("h4",{attrs:{id:"events-client-disconnected-终端连接断开"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#events-client-disconnected-终端连接断开"}},[t._v("#")]),t._v(" $events/client_disconnected (终端连接断开)")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("event")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v('事件类型，固定为 "client.disconnected"')])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("reason")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("终端连接断开原因")])]),t._v(" "),a("tr",[a("td",[t._v("clientid")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("消息目的 Client ID")])]),t._v(" "),a("tr",[a("td",[t._v("username")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("消息目的用户名")])]),t._v(" "),a("tr",[a("td",[t._v("peername")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("终端的 IPAddress 和 Port")])]),t._v(" "),a("tr",[a("td",[t._v("sockname")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("emqx 监听的 IPAddress 和 Port")])]),t._v(" "),a("tr",[a("td",[t._v("disconnected_at")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("终端连接断开时间 (s)")])]),t._v(" "),a("tr",[a("td",[t._v("timestamp")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("事件触发时间 (ms)")])]),t._v(" "),a("tr",[a("td",[t._v("node")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("事件触发所在节点")])])])]),t._v(" "),a("h4",{attrs:{id:"events-session-subscribed-终端订阅成功"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#events-session-subscribed-终端订阅成功"}},[t._v("#")]),t._v(" $events/session_subscribed (终端订阅成功)")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("event")]),t._v(" "),a("th",[t._v('事件类型，固定为 "session.subscribed"')])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("clientid")]),t._v(" "),a("td",[t._v("消息目的 Client ID")])]),t._v(" "),a("tr",[a("td",[t._v("username")]),t._v(" "),a("td",[t._v("消息目的用户名")])]),t._v(" "),a("tr",[a("td",[t._v("peerhost")]),t._v(" "),a("td",[t._v("客户端的 IPAddress")])]),t._v(" "),a("tr",[a("td",[t._v("topic")]),t._v(" "),a("td",[t._v("MQTT 主题")])]),t._v(" "),a("tr",[a("td",[t._v("qos")]),t._v(" "),a("td",[t._v("MQTT 消息的 QoS")])]),t._v(" "),a("tr",[a("td",[t._v("timestamp")]),t._v(" "),a("td",[t._v("事件触发时间 (ms)")])]),t._v(" "),a("tr",[a("td",[t._v("node")]),t._v(" "),a("td",[t._v("事件触发所在节点")])])])]),t._v(" "),a("h4",{attrs:{id:"events-session-unsubscribed-取消终端订阅成功"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#events-session-unsubscribed-取消终端订阅成功"}},[t._v("#")]),t._v(" $events/session_unsubscribed (取消终端订阅成功)")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("event")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v('事件类型，固定为 "session.unsubscribed"')])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("clientid")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("消息目的 Client ID")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("username")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("消息目的用户名")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("peerhost")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("客户端的 IPAddress")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("topic")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("MQTT 主题")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("qos")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("MQTT 消息的 QoS")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("timestamp")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("事件触发时间 (ms)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("node")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("事件触发所在节点")])])])]),t._v(" "),a("h3",{attrs:{id:"sql-关键字和符号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-关键字和符号"}},[t._v("#")]),t._v(" SQL 关键字和符号")]),t._v(" "),a("h4",{attrs:{id:"select-from-where-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#select-from-where-语句"}},[t._v("#")]),t._v(" SELECT - FROM - WHERE 语句")]),t._v(" "),a("p",[t._v("SELECT 语句用于决定最终的输出结果里的字段。比如:")]),t._v(" "),a("p",[t._v('下面 SQL 的输出结果中将只有两个字段 "a" 和 "b":')]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('SELECT a, b FROM "t/#"\n')])])]),a("p",[t._v("WHERE 语句用于对本事件中可用字段，或 SELECT 语句中定义的字段进行条件过滤。比如:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 选取 username 为 'abc' 的终端发来的消息，输出结果为所有可用字段:\n\nSELECT * FROM \"#\" WHERE username = 'abc'\n\n## 选取 clientid 为 'abc' 的终端发来的消息，输出结果将只有 cid 一个字段。\n## 注意 cid 变量是在 SELECT 语句中定义的，故可在 WHERE 语句中使用:\n\nSELECT clientid as cid FROM \"#\" WHERE cid = 'abc'\n\n## 选取 username 为 'abc' 的终端发来的消息，输出结果将只有 cid 一个字段。\n## 注意虽然 SELECT 语句中只选取了 cid 一个字段，所有消息发布事件中的可用字段 (比如 clientid, username 等) 仍然可以在 WHERE 语句中使用:\n\nSELECT clientid as cid FROM \"#\" WHERE username = 'abc'\n\n## 但下面这个 SQL 语句就不能工作了，因为变量 xyz 既不是消息发布事件中的可用字段，又没有在 SELECT 语句中定义:\n\nSELECT clientid as cid FROM \"#\" WHERE xyz = 'abc'\n")])])]),a("p",[t._v("FROM 语句用于选择事件来源。如果是消息发布则填写消息的主题，如果是事件则填写对应的事件主题。")]),t._v(" "),a("h4",{attrs:{id:"运算符号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符号"}},[t._v("#")]),t._v(" 运算符号")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("函数名")]),t._v(" "),a("th",[t._v("函数作用")]),t._v(" "),a("th",[t._v("返回值")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("+")])]),t._v(" "),a("td",[t._v("加法，或字符串拼接")]),t._v(" "),a("td",[t._v("加和，或拼接之后的字符串")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("-")])]),t._v(" "),a("td",[t._v("减法")]),t._v(" "),a("td",[t._v("差值")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("*")])]),t._v(" "),a("td",[t._v("乘法")]),t._v(" "),a("td",[t._v("乘积")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("/")])]),t._v(" "),a("td",[t._v("除法")]),t._v(" "),a("td",[t._v("商值")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("div")])]),t._v(" "),a("td",[t._v("整数除法")]),t._v(" "),a("td",[t._v("整数商值")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("mod")])]),t._v(" "),a("td",[t._v("取模")]),t._v(" "),a("td",[t._v("模")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("=")])]),t._v(" "),a("td",[t._v("比较两者是否完全相等。可用于比较变量和主题")]),t._v(" "),a("td",[t._v("true/false")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("=~")])]),t._v(" "),a("td",[t._v("比较主题(topic)是否能够匹配到主题过滤器(topic filter)。只能用于主题匹配")]),t._v(" "),a("td",[t._v("true/false")]),t._v(" "),a("td")])])]),t._v(" "),a("h3",{attrs:{id:"sql-语句中可用的函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-语句中可用的函数"}},[t._v("#")]),t._v(" SQL 语句中可用的函数")]),t._v(" "),a("h4",{attrs:{id:"数学函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数学函数"}},[t._v("#")]),t._v(" 数学函数")]),t._v(" "),a("table",{staticStyle:{width:"99%"}},[a("colgroup",[a("col",{staticStyle:{width:"12%"}}),t._v(" "),a("col",{staticStyle:{width:"23%"}}),t._v(" "),a("col",{staticStyle:{width:"41%"}}),t._v(" "),a("col",{staticStyle:{width:"20%"}})]),t._v(" "),a("tbody",[a("tr",{staticClass:"odd"},[a("td",[t._v("函数名")]),t._v(" "),a("td",[t._v("函数作用")]),t._v(" "),a("td",[t._v("参数")]),t._v(" "),a("td",[t._v("返回值")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("abs")]),t._v(" "),a("td",[t._v("绝对值")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("被操作数")])])]),t._v(" "),a("td",[t._v("绝对值")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("cos")]),t._v(" "),a("td",[t._v("余弦")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("被操作数")])])]),t._v(" "),a("td",[t._v("余弦值")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("cosh")]),t._v(" "),a("td",[t._v("双曲余弦")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("被操作数")])])]),t._v(" "),a("td",[t._v("双曲余弦值")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("acos")]),t._v(" "),a("td",[t._v("反余弦")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("被操作数")])])]),t._v(" "),a("td",[t._v("反余弦值")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("acosh")]),t._v(" "),a("td",[t._v("反双曲余弦")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("被操作数")])])]),t._v(" "),a("td",[t._v("反双曲余弦值")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("sin")]),t._v(" "),a("td",[t._v("正弦")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("被操作数")])])]),t._v(" "),a("td",[t._v("正弦值")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("sinh")]),t._v(" "),a("td",[t._v("双曲正弦")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("被操作数")])])]),t._v(" "),a("td",[t._v("双曲正弦值")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("asin")]),t._v(" "),a("td",[t._v("反正弦")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("被操作数")])])]),t._v(" "),a("td",[t._v("值")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("asinh")]),t._v(" "),a("td",[t._v("反双曲正弦")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("被操作数")])])]),t._v(" "),a("td",[t._v("反双曲正弦值")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("tan")]),t._v(" "),a("td",[t._v("正切")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("被操作数")])])]),t._v(" "),a("td",[t._v("正切值")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("tanh")]),t._v(" "),a("td",[t._v("双曲正切")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("被操作数")])])]),t._v(" "),a("td",[t._v("双曲正切值")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("atan")]),t._v(" "),a("td",[t._v("反正切")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("被操作数")])])]),t._v(" "),a("td",[t._v("反正切值")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("atanh")]),t._v(" "),a("td",[t._v("反双曲正切")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("被操作数")])])]),t._v(" "),a("td",[t._v("反双曲正切值")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("ceil")]),t._v(" "),a("td",[t._v("上取整")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("被操作数")])])]),t._v(" "),a("td",[t._v("整数值")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("floor")]),t._v(" "),a("td",[t._v("下取整")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("被操作数")])])]),t._v(" "),a("td",[t._v("整数值")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("round")]),t._v(" "),a("td",[t._v("四舍五入")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("被操作数")])])]),t._v(" "),a("td",[t._v("整数值")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("exp")]),t._v(" "),a("td",[t._v("幂运算")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("被操作数")])])]),t._v(" "),a("td",[t._v("e 的 x 次幂")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("power")]),t._v(" "),a("td",[t._v("指数运算")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("左操作数 x 2. 右操作数 y")])])]),t._v(" "),a("td",[t._v("x 的 y 次方")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("sqrt")]),t._v(" "),a("td",[t._v("平方根运算")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("被操作数")])])]),t._v(" "),a("td",[t._v("平方根")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("fmod")]),t._v(" "),a("td",[t._v("负点数取模函数")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("左操作数 2. 右操作数")])])]),t._v(" "),a("td",[t._v("模")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("log")]),t._v(" "),a("td",[t._v("以 e 为底对数")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("被操作数")])])]),t._v(" "),a("td",[t._v("值")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("log10")]),t._v(" "),a("td",[t._v("以 10 为底对数")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("被操作数")])])]),t._v(" "),a("td",[t._v("值")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("log2")]),t._v(" "),a("td",[t._v("以 2 为底对数")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("被操作数")])])]),t._v(" "),a("td",[t._v("值")])])])]),t._v(" "),a("h4",{attrs:{id:"数据类型判断函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型判断函数"}},[t._v("#")]),t._v(" 数据类型判断函数")]),t._v(" "),a("table",[a("colgroup",[a("col",{staticStyle:{width:"9%"}}),t._v(" "),a("col",{staticStyle:{width:"35%"}}),t._v(" "),a("col",{staticStyle:{width:"6%"}}),t._v(" "),a("col",{staticStyle:{width:"48%"}})]),t._v(" "),a("tbody",[a("tr",{staticClass:"odd"},[a("td",[t._v("函数名")]),t._v(" "),a("td",[t._v("函数作用")]),t._v(" "),a("td",[t._v("参数")]),t._v(" "),a("td",[t._v("返回值")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("is_null")]),t._v(" "),a("td",[t._v("判断变量是否为空值")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("Data")])])]),t._v(" "),a("td",[t._v("Boolean 类型的数据。如果为空值(undefined) 则返回 true，否则返回 false")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("is_not_null")]),t._v(" "),a("td",[t._v("判断变量是否为非空值")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("Data")])])]),t._v(" "),a("td",[t._v("Boolean 类型的数据。如果为空值(undefined) 则返回 false，否则返回 true")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("is_str")]),t._v(" "),a("td",[t._v("判断变量是否为 String 类型")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("Data")])])]),t._v(" "),a("td",[t._v("Boolean 类型的数据。")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("is_bool")]),t._v(" "),a("td",[t._v("判断变量是否为 Boolean 类型")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("Data")])])]),t._v(" "),a("td",[t._v("Boolean 类型的数据。")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("is_int")]),t._v(" "),a("td",[t._v("判断变量是否为 Integer 类型")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("Data")])])]),t._v(" "),a("td",[t._v("Boolean 类型的数据。")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("is_float")]),t._v(" "),a("td",[t._v("判断变量是否为 Float 类型")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("Data")])])]),t._v(" "),a("td",[t._v("Boolean 类型的数据。")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("is_num")]),t._v(" "),a("td",[t._v("判断变量是否为数字类型，包括 Integer 和 Float 类型")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("Data")])])]),t._v(" "),a("td",[t._v("Boolean 类型的数据。")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("is_map")]),t._v(" "),a("td",[t._v("判断变量是否为 Map 类型")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("Data")])])]),t._v(" "),a("td",[t._v("Boolean 类型的数据。")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("is_array")]),t._v(" "),a("td",[t._v("判断变量是否为 Array 类型")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("Data")])])]),t._v(" "),a("td",[t._v("Boolean 类型的数据。")])])])]),t._v(" "),a("h4",{attrs:{id:"数据类型转换函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型转换函数"}},[t._v("#")]),t._v(" 数据类型转换函数")]),t._v(" "),a("table",[a("colgroup",[a("col",{staticStyle:{width:"9%"}}),t._v(" "),a("col",{staticStyle:{width:"29%"}}),t._v(" "),a("col",{staticStyle:{width:"9%"}}),t._v(" "),a("col",{staticStyle:{width:"51%"}})]),t._v(" "),a("tbody",[a("tr",{staticClass:"odd"},[a("td",[t._v("函数名")]),t._v(" "),a("td",[t._v("函数作用")]),t._v(" "),a("td",[t._v("参数")]),t._v(" "),a("td",[t._v("返回值")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("str")]),t._v(" "),a("td",[t._v("将数据转换为 String 类型")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("Data")])])]),t._v(" "),a("td",[t._v("String 类型的数据。无法转换将会导致 SQL 匹配失败")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("str_utf8")]),t._v(" "),a("td",[t._v("将数据转换为 UTF-8 String 类型")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("Data")])])]),t._v(" "),a("td",[t._v("UTF-8 String 类型的数据。无法转换将会导致 SQL 匹配失败")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("bool")]),t._v(" "),a("td",[t._v("将数据转换为 Boolean 类型")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("Data")])])]),t._v(" "),a("td",[t._v("Boolean 类型的数据。无法转换将会导致 SQL 匹配失败")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("int")]),t._v(" "),a("td",[t._v("将数据转换为整数类型")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("Data")])])]),t._v(" "),a("td",[t._v("整数类型的数据。无法转换将会导致 SQL 匹配失败")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("float")]),t._v(" "),a("td",[t._v("将数据转换为浮点型类型")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("Data")])])]),t._v(" "),a("td",[t._v("浮点型类型的数据。无法转换将会导致 SQL 匹配失败")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("map")]),t._v(" "),a("td",[t._v("将数据转换为 Map 类型")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("Data")])])]),t._v(" "),a("td",[t._v("Map 类型的数据。无法转换将会导致 SQL 匹配失败")])])])]),t._v(" "),a("h4",{attrs:{id:"字符串函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串函数"}},[t._v("#")]),t._v(" 字符串函数")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("函数名")]),t._v(" "),a("th",[t._v("函数作用")]),t._v(" "),a("th",[t._v("参数")]),t._v(" "),a("th",[t._v("返回值")]),t._v(" "),a("th",[t._v("举例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("lower")]),t._v(" "),a("td",[t._v("转为小写")]),t._v(" "),a("td",[t._v("1. 原字符串")]),t._v(" "),a("td",[t._v("小写字符串")]),t._v(" "),a("td",[a("code",[t._v("1. lower('AbC') = 'abc'")]),a("br"),a("br"),a("code",[t._v("2. lower('abc') = 'abc'")])])]),t._v(" "),a("tr",[a("td",[t._v("upper")]),t._v(" "),a("td",[t._v("转为大写")]),t._v(" "),a("td",[t._v("1. 原字符串")]),t._v(" "),a("td",[t._v("大写字符串")]),t._v(" "),a("td",[a("code",[t._v("1. upper('AbC') = 'ABC'")]),a("br"),a("br"),a("code",[t._v("2. lower('ABC') = 'ABC'")])])]),t._v(" "),a("tr",[a("td",[t._v("trim")]),t._v(" "),a("td",[t._v("去掉左右空格")]),t._v(" "),a("td",[t._v("1. 原字符串")]),t._v(" "),a("td",[t._v("去掉空格后的字符串")]),t._v(" "),a("td",[a("code",[t._v("1. trim(' hello ') = 'hello'")])])]),t._v(" "),a("tr",[a("td",[t._v("ltrim")]),t._v(" "),a("td",[t._v("去掉左空格")]),t._v(" "),a("td",[t._v("1. 原字符串")]),t._v(" "),a("td",[t._v("去掉空格后的字符串")]),t._v(" "),a("td",[a("code",[t._v("1. ltrim(' hello ') = 'hello '")])])]),t._v(" "),a("tr",[a("td",[t._v("rtrim")]),t._v(" "),a("td",[t._v("去掉右空格")]),t._v(" "),a("td",[t._v("1. 原字符串")]),t._v(" "),a("td",[t._v("去掉空格后的字符串")]),t._v(" "),a("td",[a("code",[t._v("1. rtrim(' hello ') = ' hello'")])])]),t._v(" "),a("tr",[a("td",[t._v("reverse")]),t._v(" "),a("td",[t._v("字符串反转")]),t._v(" "),a("td",[t._v("1. 原字符串")]),t._v(" "),a("td",[t._v("翻转后的字符串")]),t._v(" "),a("td",[a("code",[t._v("1. reverse('hello') = 'olleh'")])])]),t._v(" "),a("tr",[a("td",[t._v("strlen")]),t._v(" "),a("td",[t._v("取字符串长度")]),t._v(" "),a("td",[t._v("1. 原字符串")]),t._v(" "),a("td",[t._v("整数值，字符长度")]),t._v(" "),a("td",[a("code",[t._v("1. strlen('hello') = 5")])])]),t._v(" "),a("tr",[a("td",[t._v("substr")]),t._v(" "),a("td",[t._v("取字符的子串")]),t._v(" "),a("td",[t._v("1. 原字符串 2. 起始位置. 注意: 下标从 0 开始")]),t._v(" "),a("td",[t._v("子串")]),t._v(" "),a("td",[a("code",[t._v("1. substr('abcdef', 2) = 'cdef'")])])]),t._v(" "),a("tr",[a("td",[t._v("substr")]),t._v(" "),a("td",[t._v("取字符的子串")]),t._v(" "),a("td",[t._v("1. 原字符串 2. 起始位置 3. 要取出的子串长度. 注意: 下标从 0 开始")]),t._v(" "),a("td",[t._v("子串")]),t._v(" "),a("td",[a("code",[t._v("1. substr('abcdef', 2, 3) = 'cde'")])])]),t._v(" "),a("tr",[a("td",[t._v("split")]),t._v(" "),a("td",[t._v("字符串分割")]),t._v(" "),a("td",[t._v("1. 原字符串 2. 分割符子串")]),t._v(" "),a("td",[t._v("分割后的字符串数组")]),t._v(" "),a("td",[a("code",[t._v("1. split('a/b/ c', '/') = ['a', 'b', ' c']")])])]),t._v(" "),a("tr",[a("td",[t._v("split")]),t._v(" "),a("td",[t._v("字符串分割, 只查找左边第一个分隔符")]),t._v(" "),a("td",[t._v("1. 原字符串 2. 分割符子串 3. 'leading'")]),t._v(" "),a("td",[t._v("分割后的字符串数组")]),t._v(" "),a("td",[a("code",[t._v("1. split('a/b/ c', '/', 'leading') = ['a', 'b/ c']")])])]),t._v(" "),a("tr",[a("td",[t._v("split")]),t._v(" "),a("td",[t._v("字符串分割, 只查找右边第一个分隔符")]),t._v(" "),a("td",[t._v("1. 原字符串 2. 分割符子串 3. 'trailing'")]),t._v(" "),a("td",[t._v("分割后的字符串数组")]),t._v(" "),a("td",[a("code",[t._v("1. split('a/b/ c', '/', 'trailing') = ['a/b', ' c']")])])]),t._v(" "),a("tr",[a("td",[t._v("concat")]),t._v(" "),a("td",[t._v("字符串拼接")]),t._v(" "),a("td",[t._v("1. 左字符串 2. 右符子串")]),t._v(" "),a("td",[t._v("拼接后的字符串")]),t._v(" "),a("td",[a("code",[t._v("1. concat('a', '/bc') = 'a/bc'")]),a("br"),a("br"),a("code",[t._v("2. 'a' + '/bc' = 'a/bc'")])])]),t._v(" "),a("tr",[a("td",[t._v("tokens")]),t._v(" "),a("td",[t._v("字符串分解(按照指定字符串符分解)")]),t._v(" "),a("td",[t._v("1. 输入字符串 2. 分割符或字符串")]),t._v(" "),a("td",[t._v("分解后的字符串数组")]),t._v(" "),a("td",[a("code",[t._v("1. tokens(' a/b/ c', '/') = [' a', 'b', ' c']")]),a("br"),a("br"),a("code",[t._v("2. tokens(' a/b/ c', '/ ') = ['a', 'b', 'c']")]),a("br"),a("br"),a("code",[t._v("3. tokens(' a/b/ c\\n', '/ ') = ['a', 'b', 'c\\n']")])])]),t._v(" "),a("tr",[a("td",[t._v("tokens")]),t._v(" "),a("td",[t._v("字符串分解(按照指定字符串和换行符分解)")]),t._v(" "),a("td",[t._v("1. 输入字符串 2. 分割符或字符串 3. 'nocrlf'")]),t._v(" "),a("td",[t._v("分解后的字符串数组")]),t._v(" "),a("td",[a("code",[t._v("1. tokens(' a/b/ c\\n', '/ ', 'nocrlf') = ['a', 'b', 'c']")]),a("br"),a("br"),a("code",[t._v("2. tokens(' a/b/ c\\r\\n', '/ ', 'nocrlf') = ['a', 'b', 'c']")])])]),t._v(" "),a("tr",[a("td",[t._v("sprintf")]),t._v(" "),a("td",[t._v("字符串格式化, 格式字符串的用法详见 https://erlang.org/doc/man/io.html#fwrite-1 里的 Format 部分")]),t._v(" "),a("td",[t._v("1. 格式字符串 2,3,4... 参数列表。参数个数不定")]),t._v(" "),a("td",[t._v("分解后的字符串数组")]),t._v(" "),a("td",[a("code",[t._v("1. sprintf('hello, ~s!', 'steve') = 'hello, steve!'")]),a("br"),a("br"),a("code",[t._v("2. sprintf('count: ~p~n', 100) = 'count: 100\\n'")])])]),t._v(" "),a("tr",[a("td",[t._v("pad")]),t._v(" "),a("td",[t._v("字符串补足长度，补空格，从尾部补足")]),t._v(" "),a("td",[t._v("1. 原字符串 2. 字符总长度")]),t._v(" "),a("td",[t._v("补足后的字符串")]),t._v(" "),a("td",[a("code",[t._v("1. pad('abc', 5) = 'abc '")])])]),t._v(" "),a("tr",[a("td",[t._v("pad")]),t._v(" "),a("td",[t._v("字符串补足长度，补空格，从尾部补足")]),t._v(" "),a("td",[t._v("1. 原字符串 2. 字符总长度 3. 'trailing'")]),t._v(" "),a("td",[t._v("补足后的字符串")]),t._v(" "),a("td",[a("code",[t._v("1. pad('abc', 5, 'trailing') = 'abc '")])])]),t._v(" "),a("tr",[a("td",[t._v("pad")]),t._v(" "),a("td",[t._v("字符串补足长度，补空格，从两边补足")]),t._v(" "),a("td",[t._v("1. 原字符串 2. 字符总长度 3. 'both'")]),t._v(" "),a("td",[t._v("补足后的字符串")]),t._v(" "),a("td",[a("code",[t._v("1. pad('abc', 5, 'both') = ' abc '")])])]),t._v(" "),a("tr",[a("td",[t._v("pad")]),t._v(" "),a("td",[t._v("字符串补足长度，补空格，从头部补足")]),t._v(" "),a("td",[t._v("1. 原字符串 2. 字符总长度 3. 'leading'")]),t._v(" "),a("td",[t._v("补足后的字符串")]),t._v(" "),a("td",[a("code",[t._v("1. pad('abc', 5, 'leading') = ' abc'")])])]),t._v(" "),a("tr",[a("td",[t._v("pad")]),t._v(" "),a("td",[t._v("字符串补足长度，补指定字符，从尾部补足")]),t._v(" "),a("td",[t._v("1. 原字符串 2. 字符总长度 3. 'trailing' 4. 指定用于补足的字符")]),t._v(" "),a("td",[t._v("补足后的字符串")]),t._v(" "),a("td",[a("code",[t._v("1. pad('abc', 5, 'trailing', '*') = 'abc**'")]),a("br"),a("br"),a("code",[t._v("2. pad('abc', 5, 'trailing', '*#') = 'abc*#*#'")])])]),t._v(" "),a("tr",[a("td",[t._v("pad")]),t._v(" "),a("td",[t._v("字符串补足长度，补指定字符，从两边补足")]),t._v(" "),a("td",[t._v("1. 原字符串 2. 字符总长度 3. 'both' 4. 指定用于补足的字符")]),t._v(" "),a("td",[t._v("补足后的字符串")]),t._v(" "),a("td",[a("code",[t._v("1. pad('abc', 5, 'both', '*') = '*abc*'")]),a("br"),a("br"),a("code",[t._v("2. pad('abc', 5, 'both', '*#') = '*#abc*#'")])])]),t._v(" "),a("tr",[a("td",[t._v("pad")]),t._v(" "),a("td",[t._v("字符串补足长度，补指定字符，从头部补足")]),t._v(" "),a("td",[t._v("1. 原字符串 2. 字符总长度 3. 'leading' 4. 指定用于补足的字符")]),t._v(" "),a("td",[t._v("补足后的字符串")]),t._v(" "),a("td",[a("code",[t._v("1. pad('abc', 5, 'leading', '*') = '**abc'")]),a("br"),a("br"),a("code",[t._v("2. pad('abc', 5, 'leading', '*#') = '*#*#abc'")])])]),t._v(" "),a("tr",[a("td",[t._v("replace")]),t._v(" "),a("td",[t._v("替换字符串中的某子串，查找所有匹配子串替换")]),t._v(" "),a("td",[t._v("1. 原字符串 2. 要被替换的子串 3. 指定用于替换的字符串")]),t._v(" "),a("td",[t._v("替换后的字符串")]),t._v(" "),a("td",[a("code",[t._v("1. replace('ababef', 'ab', 'cd') = 'cdcdef'")])])]),t._v(" "),a("tr",[a("td",[t._v("replace")]),t._v(" "),a("td",[t._v("替换字符串中的某子串，查找所有匹配子串替换")]),t._v(" "),a("td",[t._v("1. 原字符串 2. 要被替换的子串 3. 指定用于替换的字符串 4. 'all'")]),t._v(" "),a("td",[t._v("替换后的字符串")]),t._v(" "),a("td",[a("code",[t._v("1. replace('ababef', 'ab', 'cd', 'all') = 'cdcdef'")])])]),t._v(" "),a("tr",[a("td",[t._v("replace")]),t._v(" "),a("td",[t._v("替换字符串中的某子串，从尾部查找第一个匹配子串替换")]),t._v(" "),a("td",[t._v("1. 原字符串 2. 要被替换的子串 3. 指定用于替换的字符串 4. 'trailing'")]),t._v(" "),a("td",[t._v("替换后的字符串")]),t._v(" "),a("td",[a("code",[t._v("1. replace('ababef', 'ab', 'cd', 'trailing') = 'abcdef'")])])]),t._v(" "),a("tr",[a("td",[t._v("replace")]),t._v(" "),a("td",[t._v("替换字符串中的某子串，从头部查找第一个匹配子串替换")]),t._v(" "),a("td",[t._v("1. 原字符串 2. 要被替换的子串 3. 指定用于替换的字符串 4. 'leading'")]),t._v(" "),a("td",[t._v("替换后的字符串")]),t._v(" "),a("td",[a("code",[t._v("1. replace('ababef', 'ab', 'cd', 'leading') = 'cdabef'")])])]),t._v(" "),a("tr",[a("td",[t._v("regex_match")]),t._v(" "),a("td",[t._v("判断字符串是否与某正则表达式匹配")]),t._v(" "),a("td",[t._v("1. 原字符串 2. 正则表达式")]),t._v(" "),a("td",[t._v("true 或 false")]),t._v(" "),a("td",[a("code",[t._v("1. regex_match('abc123', '[a-zA-Z1-9]*') = true")])])]),t._v(" "),a("tr",[a("td",[t._v("regex_replace")]),t._v(" "),a("td",[t._v("替换字符串中匹配到某正则表达式的子串")]),t._v(" "),a("td",[t._v("1. 原字符串 2. 正则表达式 3. 指定用于替换的字符串")]),t._v(" "),a("td",[t._v("替换后的字符串")]),t._v(" "),a("td",[a("code",[t._v("1. regex_replace('ab1cd3ef', '[1-9]', '[&]') = 'ab[1]cd[3]ef'")]),a("br"),a("br"),a("code",[t._v("2. regex_replace('ccefacef', 'c+', ':') = ':efa:ef'")])])]),t._v(" "),a("tr",[a("td",[t._v("ascii")]),t._v(" "),a("td",[t._v("返回字符对应的 ASCII 码")]),t._v(" "),a("td",[t._v("1. 字符")]),t._v(" "),a("td",[t._v("整数值，字符对应的 ASCII 码")]),t._v(" "),a("td",[a("code",[t._v("1. ascii('a') = 97")])])]),t._v(" "),a("tr",[a("td",[t._v("find")]),t._v(" "),a("td",[t._v("查找并返回字符串中的某个子串，从头部查找")]),t._v(" "),a("td",[t._v("1. 原字符串 2. 要查找的子串")]),t._v(" "),a("td",[t._v("查抄到的子串，如找不到则返回空字符串")]),t._v(" "),a("td",[a("code",[t._v("1. find('eeabcabcee', 'abc') = 'abcabcee'")])])]),t._v(" "),a("tr",[a("td",[t._v("find")]),t._v(" "),a("td",[t._v("查找并返回字符串中的某个子串，从头部查找")]),t._v(" "),a("td",[t._v("1. 原字符串 2. 要查找的子串 3. 'leading'")]),t._v(" "),a("td",[t._v("查抄到的子串，如找不到则返回空字符串")]),t._v(" "),a("td",[a("code",[t._v("1. find('eeabcabcee', 'abc', 'leading') = 'abcabcee'")])])]),t._v(" "),a("tr",[a("td",[t._v("find")]),t._v(" "),a("td",[t._v("查找并返回字符串中的某个子串，从尾部查找")]),t._v(" "),a("td",[t._v("1. 原字符串 2. 要查找的子串 3. 'trailing'")]),t._v(" "),a("td",[t._v("查抄到的子串，如找不到则返回空字符串")]),t._v(" "),a("td",[a("code",[t._v("1. find('eeabcabcee', 'abc', 'trailing') = 'abcee'")])])])])]),t._v(" "),a("h4",{attrs:{id:"map-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map-函数"}},[t._v("#")]),t._v(" Map 函数")]),t._v(" "),a("table",[a("colgroup",[a("col",{staticStyle:{width:"6%"}}),t._v(" "),a("col",{staticStyle:{width:"34%"}}),t._v(" "),a("col",{staticStyle:{width:"22%"}}),t._v(" "),a("col",{staticStyle:{width:"35%"}})]),t._v(" "),a("tbody",[a("tr",{staticClass:"odd"},[a("td",[t._v("函数名")]),t._v(" "),a("td",[t._v("函数作用")]),t._v(" "),a("td",[t._v("参数")]),t._v(" "),a("td",[t._v("返回值")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("map_get")]),t._v(" "),a("td",[t._v("取 Map 中某个 Key 的值，如果没有则返回空值")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("Key 2. Map")])])]),t._v(" "),a("td",[t._v('Map 中某个 Key 的值。支持嵌套的 Key，比如 "a.b.c"')])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("map_get")]),t._v(" "),a("td",[t._v("取 Map 中某个 Key 的值，如果没有则返回指定默认值")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("Key 2. Map 3. Default Value")])])]),t._v(" "),a("td",[t._v('Map 中某个 Key 的值。支持嵌套的 Key，比如 "a.b.c"')])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("map_put")]),t._v(" "),a("td",[t._v("向 Map 中插入值")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("Key 2. Value 3. Map")])])]),t._v(" "),a("td",[t._v('插入后的 Map。支持嵌套的 Key，比如 "a.b.c"')])])])]),t._v(" "),a("h4",{attrs:{id:"数组函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组函数"}},[t._v("#")]),t._v(" 数组函数")]),t._v(" "),a("table",[a("colgroup",[a("col",{staticStyle:{width:"9%"}}),t._v(" "),a("col",{staticStyle:{width:"47%"}}),t._v(" "),a("col",{staticStyle:{width:"31%"}}),t._v(" "),a("col",{staticStyle:{width:"12%"}})]),t._v(" "),a("tbody",[a("tr",{staticClass:"odd"},[a("td",[t._v("函数名")]),t._v(" "),a("td",[t._v("函数作用")]),t._v(" "),a("td",[t._v("参数")]),t._v(" "),a("td",[t._v("返回值")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("nth")]),t._v(" "),a("td",[t._v("取第 n 个元素，下标从 1 开始")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("原数组")])])]),t._v(" "),a("td",[t._v("第 n 个元素")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("length")]),t._v(" "),a("td",[t._v("获取数组的长度")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("原数组")])])]),t._v(" "),a("td",[t._v("数组长度")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("sublist")]),t._v(" "),a("td",[t._v("取从第一个元素开始、长度为 len 的子数组。下标从 1 开始")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("长度 len 2. 原数组")])])]),t._v(" "),a("td",[t._v("子数组")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("sublist")]),t._v(" "),a("td",[t._v("取从第 n 个元素开始、长度为 len 的子数组。下标从 1 开始")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("起始位置 n 2. 长度 len 3. 原数组")])])]),t._v(" "),a("td",[t._v("子数组")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("first")]),t._v(" "),a("td",[t._v("取第 1 个元素。下标从 1 开始")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("原数组")])])]),t._v(" "),a("td",[t._v("第 1 个元素")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("last")]),t._v(" "),a("td",[t._v("取最后一个元素。")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("原数组")])])]),t._v(" "),a("td",[t._v("最后一个元素")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("contains")]),t._v(" "),a("td",[t._v("判断数据是否在数组里面")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("数据 2. 原数组")])])]),t._v(" "),a("td",[t._v("Boolean 值")])])])]),t._v(" "),a("h4",{attrs:{id:"哈希函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#哈希函数"}},[t._v("#")]),t._v(" 哈希函数")]),t._v(" "),a("table",{staticStyle:{width:"99%"}},[a("colgroup",[a("col",{staticStyle:{width:"12%"}}),t._v(" "),a("col",{staticStyle:{width:"20%"}}),t._v(" "),a("col",{staticStyle:{width:"13%"}}),t._v(" "),a("col",{staticStyle:{width:"16%"}})]),t._v(" "),a("tbody",[a("tr",{staticClass:"odd"},[a("td",[t._v("函数名")]),t._v(" "),a("td",[t._v("函数作用")]),t._v(" "),a("td",[t._v("参数")]),t._v(" "),a("td",[t._v("返回值")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("md5")]),t._v(" "),a("td",[t._v("求 MD5 值")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("数据")])])]),t._v(" "),a("td",[t._v("MD5 值")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("sha")]),t._v(" "),a("td",[t._v("求 SHA 值")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("数据")])])]),t._v(" "),a("td",[t._v("SHA 值")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("sha256")]),t._v(" "),a("td",[t._v("求 SHA256 值")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("数据")])])]),t._v(" "),a("td",[t._v("SHA256 值")])])])]),t._v(" "),a("h4",{attrs:{id:"编解码函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编解码函数"}},[t._v("#")]),t._v(" 编解码函数")]),t._v(" "),a("table",[a("colgroup",[a("col",{staticStyle:{width:"16%"}}),t._v(" "),a("col",{staticStyle:{width:"14%"}}),t._v(" "),a("col",{staticStyle:{width:"52%"}}),t._v(" "),a("col",{staticStyle:{width:"16%"}})]),t._v(" "),a("tbody",[a("tr",{staticClass:"odd"},[a("td",[t._v("函数名")]),t._v(" "),a("td",[t._v("函数作用")]),t._v(" "),a("td",[t._v("参数")]),t._v(" "),a("td",[t._v("返回值")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("base64_encode")]),t._v(" "),a("td",[t._v("BASE64 编码")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("数据")])])]),t._v(" "),a("td",[t._v("BASE64 字符串")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("base64_decode")]),t._v(" "),a("td",[t._v("BASE64 解码")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("BASE64 字符串")])])]),t._v(" "),a("td",[t._v("数据")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("json_encode")]),t._v(" "),a("td",[t._v("JSON 编码")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("JSON 字符串")])])]),t._v(" "),a("td",[t._v("内部 Map")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("json_decode")]),t._v(" "),a("td",[t._v("JSON 解码")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("内部 Map")])])]),t._v(" "),a("td",[t._v("JSON 字符串")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("schema_encode")]),t._v(" "),a("td",[t._v("Schema 编码")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("Schema ID 2. 内部 Map")])])]),t._v(" "),a("td",[t._v("数据")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("schema_encode")]),t._v(" "),a("td",[t._v("Schema 编码")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("Schema ID 2. 内部 Map 3. Protobuf Message 名")])])]),t._v(" "),a("td",[t._v("数据")])]),t._v(" "),a("tr",{staticClass:"even"},[a("td",[t._v("schema_decode")]),t._v(" "),a("td",[t._v("Schema 解码")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("Schema ID 2. 数据")])])]),t._v(" "),a("td",[t._v("内部 Map")])]),t._v(" "),a("tr",{staticClass:"odd"},[a("td",[t._v("schema_decode")]),t._v(" "),a("td",[t._v("Schema 解码")]),t._v(" "),a("td",[a("ol",{attrs:{type:"1"}},[a("li",[t._v("Schema ID 2. 数据 3. Protobuf Message 名")])])]),t._v(" "),a("td",[t._v("内部 Map")])])])]),t._v(" "),a("h3",{attrs:{id:"在-dashboard-中测试-sql-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在-dashboard-中测试-sql-语句"}},[t._v("#")]),t._v(" 在 Dashboard 中测试 SQL 语句")]),t._v(" "),a("p",[t._v("Dashboard 界面提供了 SQL 语句测试功能，通过给定的 SQL 语句和事件参数，展示 SQL 测试结果。")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("在创建规则界面，输入 "),a("strong",[t._v("规则SQL")]),t._v("，并启用 "),a("strong",[t._v("SQL 测试")]),t._v(" 开关:")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/backend/emqx/assets/sql-test-1@2x.png",alt:"design_7.png"}})])]),t._v(" "),a("li",[a("p",[t._v("修改模拟事件的字段，或者使用默认的配置，点击 "),a("strong",[t._v("测试")]),t._v(" 按钮:")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/backend/emqx/assets/sql-test-2@2x.png",alt:"design_7.png"}})])]),t._v(" "),a("li",[a("p",[t._v("SQL 处理后的结果将在 "),a("strong",[t._v("测试输出")]),t._v(" 文本框里展示:")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://dgiot-1253666439.cos.ap-shanghai-fsi.myqcloud.com/shuwa_tech/zh/backend/emqx/assets/sql-test-3@2x.png",alt:"design_7.png"}})])])])])}),[],!1,null,null,null);s.default=v.exports}}]);